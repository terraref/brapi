openapi: 3.0.0
info:
  title: BrAPI
  description: |-
    The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.

    <strong>General Reference Documentation</strong>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md">URL Structure</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md">Response Structure</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md">Date/Time Encoding</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md">Location Encoding</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md">Error Handling</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md">Search Services</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md">Asynchronous Processing</a>
  version: "1.3"
servers:
- url: http://localhost:5000/brapi/v1
#security:
#- AuthorizationToken: []
tags:
- name: Calls
  description: Check the available calls on a server
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Crops
  description: Information about Crops
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Programs
  description: Information about Programs
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Locations
  description: Information about Locations
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Trials
  description: Information about Trials
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Studies
  description: Information about Studies
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Observations
  description: Information about Observations
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Observation Variables
  description: API to retrieve list and details of observation variables. An observation
    variable is composed by the unique combination of one Trait, one Method and one
    Scale.
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Phenotypes
  description: Information about Phenotypes
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Germplasm
  description: Information about Germplasm
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Germplasm Attributes
  description: Information about Germplasm Attributes
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Markers
  description: Information about Markers
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Marker Profiles
  description: Information about Marker Profiles
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Genome Maps
  description: Information about Genome Maps
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Samples
  description: Information about Samples
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Vendor
  description: |-
    This interface is specific to facilities that performs an external analysis, such as genotyping facilities. The interface should be implemented by that facility's server. The breeding database is the client of this interface.
    Note that to use these calls, you likely have to use the authentication call prior to connecting (see Authentication best practices).
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Lists
  description: Create and manipulate generic lists
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Images
  description: Create and manipulate image data
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: People
  description: Create and manipulate information about people
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Search Services
  description: The available Search Services for finding data
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Authentication
  description: Authenticacte your requests
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
- name: Deprecated
  description: Deprecated Calls
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
paths:
  /calls:
    get:
      tags:
      - Calls
      summary: Get the list of implemented Calls
      description: " Implementation Notes\nHaving a consistent structure for the path\
        \ string of each call is very important for teams to be able to connect and\
        \ find errors. Read more on Github.\nHere are the rules for the path of each\
        \ call that should be returned\n\n\n\nEvery word in the call path should match\
        \ the documentation exactly, both in spelling and capitalization. Note that\
        \ path strings are all lower case, but path parameters are camel case.\n\n\
        Each path should start relative to \"/\" and therefore should not include\
        \ \"/\"\n\nNo leading or trailing slashes (\"/\") \n\nPath parameters are\
        \ wrapped in curly braces (\"{}\"). The name of the path parameter should\
        \ be spelled exactly as it is specified in the documentation.\n\n\n\n\nExamples\
        \ GOOD    \"call\": \"germplasm/{germplasmDbId}/markerprofiles\" BAD    \"\
        call\": \"germplasm/{id}/markerprofiles\" BAD    \"call\": \"germplasm/{germplasmDbId}/markerProfiles\"\
        \ BAD    \"call\": \"germplasm/{germplasmdbid}/markerprofiles\" BAD    \"\
        call\": \"brapi/v1/germplasm/{germplasmDbId}/markerprofiles\" BAD    \"call\"\
        : \"/germplasm/{germplasmDbId}/markerprofiles/\" BAD    \"call\": \"germplasm/<germplasmDbId>/markerprofiles\"\
        \n\n\n\ntest-server.brapi.org/brapi/v1/calls"
      parameters:
      - name: datatype
        in: query
        description: DEPRECATED in v1.3 - see dataType (camel case)
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
      - name: dataType
        in: query
        description: 'The data format supported by the call. Example: `json`'
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/WSMIMEDataTypes'
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/callsResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 103
                    totalPages: 52
                  status: []
                result:
                  data:
                  - call: allelematrices
                    dataTypes:
                    - application/json
                    datatypes:
                    - application/json
                    methods:
                    - GET
                    versions:
                    - "1.0"
                    - "1.1"
                    - "1.2"
                    - "1.3"
                  - call: allelematrices-search
                    dataTypes:
                    - application/json
                    datatypes:
                    - application/json
                    methods:
                    - GET
                    - POST
                    versions:
                    - "1.2"
                    - "1.3"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
  /commoncropnames:
    get:
      tags:
      - Crops
      summary: Get the Common Crop Names
      description: "List the common crop names for the crops available in a database\
        \ server. \n\nThis call is **required** for multi-crop systems where data\
        \ from multiple crops may be stored in the same database server. A distinct\
        \ database server is defined by everything in the URL before \"/brapi/v1\"\
        , including host name and base path.  \n\nThis call is recommended for single\
        \ crop systems to be compatible with multi-crop clients. For a single crop\
        \ system the response should contain an array with exactly 1 element. \n\n\
        The common crop name can be used as a search parameter for Programs, Studies,\
        \ and Germplasm.\n\n\ntest-server.brapi.org/brapi/v1/commonCropNames"
      parameters:
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonCropNamesResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - Tomatillo
                  - Paw Paw
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
  /crops:
    get:
      tags:
      - Crops
      - Deprecated
      summary: List supported crops
      description: |-
        For multi crop systems this is a useful call to list all the supported crops.


        test-server.brapi.org/brapi/v1/crops
      parameters:
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cropsResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 2
                    pageSize: 1000
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data: []
      deprecated: true
  /events:
    get:
      description: Get list of events
      parameters:
      - description: Filter based on study unique identifier in which the events occured
        in: query
        name: studyDbId
        required: false
        schema:
          type: string
      - description: Filter based on an ObservationUnit unique identifier in which the events occured
        in: query
        name: observationUnitDbId
        required: false
        schema:
          type: string
      - description: Filter based on an Event DbId
        in: query
        name: eventDbId
        required: false
        schema:
          type: string
      - description: Filter based on an Event Type
        in: query
        name: eventType
        required: false
        schema:
          type: string
      - description: Filter based on an Date Range
        in: query
        name: dateRangeStart
        required: false
        schema:
          format: date-time
          type: string
      - description: Filter based on an Date Range
        in: query
        name: dateRangeEnd
        required: false
        schema:
          format: date-time
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  '@context':
                    $ref: '#/components/schemas/Context'
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/Event'
                        type: array
                    required:
                       - data
                    type: object
                required:
                  - metadata
                  - result
                title: eventsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Events
      tags:
        - Events
  /germplasm:
    get:
      tags:
      - Germplasm
      summary: Get the Germplasm
      description: "Addresses these needs\n\n- General germplasm search mechanism\
        \ that accepts POST for complex queries \n\n- Possibility to search germplasm\
        \ by more parameters than those allowed by the existing germplasm search \n\
        \n- Possibility to get MCPD details by PUID rather than dbId"
      parameters:
      - name: germplasmPUI
        in: query
        description: Permanent unique identifier (DOI, URI, etc.)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: germplasmDbId
        in: query
        description: Internal database identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: germplasmName
        in: query
        description: Name of the germplasm
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: commonCropName
        in: query
        description: The common crop name related to this germplasm
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/germplasmResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - accessionNumber: A000003
                    acquisitionDate: 2001-01-01
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000003
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000003
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: "3"
                    germplasmGenus: Fructus
                    germplasmName: Name003
                    germplasmPUI: http://pui.per/accession/A000003
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000002
                    seedSource: A000001/A000002
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: "2340"
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  - accessionNumber: A000004
                    acquisitionDate: 2001-01-01
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000004
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000004
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: "4"
                    germplasmGenus: Fructus
                    germplasmName: Name004
                    germplasmPUI: http://pui.per/accession/A000004
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000003
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 4
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: "2340"
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
  /locations:
    get:
      tags:
      - Locations
      summary: Get the Locations
      description: |-
        Implemented by: Germinate

        Get a list of locations.

        * The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec.

        * `altitude` is in meters.

        **Note**: Consider revising to describe polygon lat/lan points and check if adopting http://geojson.org/ is worth doing for v1.
      parameters:
      - name: locationType
        in: query
        description: Filter by location type specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locationsResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 17
                    totalPages: 9
                  status: []
                result:
                  data:
                  - abbreviation: L1
                    abreviation: L1
                    additionalInfo:
                      adm1: Junin
                      adm2: Chanchamayo
                      adm3: San Ramon
                      annualMeanTemperature: "23"
                      annualTotalPrecipitation: "360"
                      cont: South America
                      creg: LAC
                      local: San Ramon
                    altitude: 828
                    countryCode: PER
                    countryName: Peru
                    documentationURL: https://brapi.org
                    instituteAddress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteAdress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteName: Plant Science Institute
                    latitude: -11.1274995803833
                    locationDbId: "1"
                    locationName: Location 1
                    locationType: Storage location
                    longitude: -75.35639190673828
                    name: Location 1
                  - abbreviation: L2
                    abreviation: L2
                    additionalInfo: {}
                    altitude: 964
                    countryCode: PER
                    countryName: Peru
                    documentationURL: https://brapi.org
                    instituteAddress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteAdress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteName: Plant Science Institute
                    latitude: -11.161160469055176
                    locationDbId: "2"
                    locationName: Location 2
                    locationType: Breeding location
                    longitude: -75.34171295166016
                    name: Location 2
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
  /locations/{locationDbId}:
    get:
      tags:
      - Locations
      summary: Get the details of a specific Location
      description: |-
        Get details for a location.

        - The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec.

        - `altitude` is in meters.
      parameters:
      - name: locationDbId
        in: path
        description: The internal DB id for a location
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locationResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  abbreviation: L1
                  abreviation: L1
                  additionalInfo:
                    adm1: Junin
                    adm2: Chanchamayo
                    adm3: San Ramon
                    annualMeanTemperature: "23"
                    annualTotalPrecipitation: "360"
                    cont: South America
                    creg: LAC
                    local: San Ramon
                  altitude: 828
                  countryCode: PER
                  countryName: Peru
                  documentationURL: https://brapi.org
                  instituteAddress: 71 Pilgrim Avenue Chevy Chase MD 20815
                  instituteAdress: 71 Pilgrim Avenue Chevy Chase MD 20815
                  instituteName: Plant Science Institute
                  latitude: -11.1274995803833
                  locationDbId: "1"
                  locationName: Location 1
                  locationType: Storage location
                  longitude: -75.35639190673828
                  name: Location 1
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - The requested object DbId is
                not found
  /observationunits:
    get:
      tags:
      - Observations
      summary: Get the Observation Units
      description: Get a set of observation units
      parameters:
      - name: germplasmDbId
        in: query
        description: The unique ID of a germplasm (accession) to filter on
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: observationVariableDbId
        in: query
        description: The unique ID of an observation variable
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: studyDbId
        in: query
        description: The unique ID of a studies to filter on
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locationDbId
        in: query
        description: The unique ID of a location where these observations were collected
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: trialDbId
        in: query
        description: The unique ID of a trial to filter on
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: programDbId
        in: query
        description: The unique ID of a program to filter on
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: seasonDbId
        in: query
        description: The year or Phenotyping campaign of a multi-annual study (trees,
          grape, ...)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: observationUnitDbId
        in: query
        description: unique ID of an observationUnit to filter on
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: observationLevel
        in: query
        description: The type of the observationUnit. Returns only the observation
          unit of the specified type; the parent levels ID can be accessed through
          observationUnitStructure.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: observationTimeStampRangeStart
        in: query
        description: Timestamp range start
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: observationTimeStampRangeEnd
        in: query
        description: Timestamp range end
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationUnitsResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - X: "1"
                    Y: "1"
                    blockNumber: "1"
                    entryNumber: "1"
                    entryType: TEST
                    germplasmDbId: "1"
                    germplasmName: Name001
                    observationLevel: plot
                    observationLevels: block:1;plot:1
                    observationUnitDbId: "1"
                    observationUnitName: Plot 1
                    observationUnitXref:
                    - id: SAMEA179865230
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH03
                      source: gnpis.lot
                    - id: "239865"
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: "1"
                      observationTimeStamp: 2013-06-14T22:03:51-04:00
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: fall 2011
                      value: "1.2"
                    - collector: A. Technician
                      observationDbId: "2"
                      observationTimeStamp: 2013-06-14T22:04:51-04:00
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season: fall 2011
                      value: "4.5"
                    plantNumber: null
                    plotNumber: "1"
                    programName: Program 1
                    replicate: "0"
                    studyDbId: "1001"
                    studyLocation: Peru
                    studyLocationDbId: "1"
                    studyName: Study 1
                    treatments:
                    - factor: water regimen
                      modality: deficit
                  - X: "1"
                    Y: "1"
                    blockNumber: "101"
                    entryNumber: "1"
                    entryType: FILLER
                    germplasmDbId: "4"
                    germplasmName: Name004
                    observationLevel: plant
                    observationLevels: block:101;plot:5;plant:5
                    observationUnitDbId: "10"
                    observationUnitName: Plant 5
                    observationUnitXref: []
                    observations:
                    - collector: B. Tech
                      observationDbId: "16"
                      observationTimeStamp: 2011-06-14T22:06:51-04:00
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: winter 2012
                      value: "100"
                    - collector: B. Tech
                      observationDbId: "17"
                      observationTimeStamp: 2011-06-14T22:07:51-04:00
                      observationVariableDbId: MO_123:100003
                      observationVariableName: Carotenoid
                      season: winter 2012
                      value: "9"
                    - collector: B. Tech
                      observationDbId: "18"
                      observationTimeStamp: 2011-06-14T22:08:51-04:00
                      observationVariableDbId: MO_123:100004
                      observationVariableName: Root weight
                      season: winter 2012
                      value: "2"
                    plantNumber: "5"
                    plotNumber: "5"
                    programName: Program 1
                    replicate: "1"
                    studyDbId: "1003"
                    studyLocation: Peru
                    studyLocationDbId: "2"
                    studyName: Study 3
                    treatments: []
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action

  /phenotypes-search:
    get:
      tags:
      - Phenotypes
      - Search Services
      summary: Phenotype Search
      description: DEPRECATED in v1.3 - See GET /observationunits
      parameters:
      - name: germplasmDbId
        in: query
        description: The name or synonym of external genebank accession identifiers
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: observationVariableDbId
        in: query
        description: The ID of traits, could be ontology ID, database ID or PUI
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: studyDbId
        in: query
        description: The database ID / PK of the studies search parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locationDbId
        in: query
        description: locations these traits were collected
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: trialDbId
        in: query
        description: trial to search across
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: programDbId
        in: query
        description: program that have phenotyped this trait
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: seasonDbId
        in: query
        description: The year or Phenotyping campaign of a multi-annual study (trees,
          grape, ...)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: observationLevel
        in: query
        description: The type of the observationUnit. Returns only the observation
          unit of the specified type; the parent levels ID can be accessed through
          observationUnitStructure.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: observationTimeStampRangeStart
        in: query
        description: Timestamp range start
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: observationTimeStampRangeEnd
        in: query
        description: Timestamp range end
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationUnitsResponse_1'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - X: "1"
                    Y: "1"
                    blockNumber: "1"
                    entryNumber: "1"
                    entryType: TEST
                    germplasmDbId: "1"
                    germplasmName: Name001
                    observationLevel: plot
                    observationLevels: block:1;plot:1
                    observationUnitDbId: "1"
                    observationUnitName: Plot 1
                    observationUnitXref:
                    - id: SAMEA179865230
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH03
                      source: gnpis.lot
                    - id: "239865"
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: "1"
                      observationTimeStamp: 2013-06-14T22:03:51-04:00
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: fall 2011
                      value: "1.2"
                    - collector: A. Technician
                      observationDbId: "2"
                      observationTimeStamp: 2013-06-14T22:04:51-04:00
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season: fall 2011
                      value: "4.5"
                    plantNumber: null
                    plotNumber: "1"
                    programName: Program 1
                    replicate: "0"
                    studyDbId: "1001"
                    studyLocation: Peru
                    studyLocationDbId: "1"
                    studyName: Study 1
                    treatments:
                    - factor: water regimen
                      modality: deficit
                  - X: "1"
                    Y: "1"
                    blockNumber: "101"
                    entryNumber: "1"
                    entryType: FILLER
                    germplasmDbId: "4"
                    germplasmName: Name004
                    observationLevel: plant
                    observationLevels: block:101;plot:5;plant:5
                    observationUnitDbId: "10"
                    observationUnitName: Plant 5
                    observationUnitXref: []
                    observations:
                    - collector: B. Tech
                      observationDbId: "16"
                      observationTimeStamp: 2011-06-14T22:06:51-04:00
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: winter 2012
                      value: "100"
                    - collector: B. Tech
                      observationDbId: "17"
                      observationTimeStamp: 2011-06-14T22:07:51-04:00
                      observationVariableDbId: MO_123:100003
                      observationVariableName: Carotenoid
                      season: winter 2012
                      value: "9"
                    - collector: B. Tech
                      observationDbId: "18"
                      observationTimeStamp: 2011-06-14T22:08:51-04:00
                      observationVariableDbId: MO_123:100004
                      observationVariableName: Root weight
                      season: winter 2012
                      value: "2"
                    plantNumber: "5"
                    plotNumber: "5"
                    programName: Program 1
                    replicate: "1"
                    studyDbId: "1003"
                    studyLocation: Peru
                    studyLocationDbId: "2"
                    studyName: Study 3
                    treatments: []
      deprecated: true
    post:
      tags:
      - Phenotypes
      - Search Services
      summary: Phenotype Search
      description: DEPRECATED in v1.3 - See /search/observationunits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phenotypesSearchRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationUnitsResponse_1'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - X: "1"
                    Y: "1"
                    blockNumber: "1"
                    entryNumber: "1"
                    entryType: TEST
                    germplasmDbId: "1"
                    germplasmName: Name001
                    observationLevel: plot
                    observationLevels: block:1;plot:1
                    observationUnitDbId: "1"
                    observationUnitName: Plot 1
                    observationUnitXref:
                    - id: SAMEA179865230
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH03
                      source: gnpis.lot
                    - id: "239865"
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: "1"
                      observationTimeStamp: 2013-06-14T22:03:51-04:00
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: fall 2011
                      value: "1.2"
                    - collector: A. Technician
                      observationDbId: "2"
                      observationTimeStamp: 2013-06-14T22:04:51-04:00
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season: fall 2011
                      value: "4.5"
                    plantNumber: null
                    plotNumber: "1"
                    programName: Program 1
                    replicate: "0"
                    studyDbId: "1001"
                    studyLocation: Peru
                    studyLocationDbId: "1"
                    studyName: Study 1
                    treatments:
                    - factor: water regimen
                      modality: deficit
                  - X: "1"
                    Y: "1"
                    blockNumber: "101"
                    entryNumber: "1"
                    entryType: FILLER
                    germplasmDbId: "4"
                    germplasmName: Name004
                    observationLevel: plant
                    observationLevels: block:101;plot:5;plant:5
                    observationUnitDbId: "10"
                    observationUnitName: Plant 5
                    observationUnitXref: []
                    observations:
                    - collector: B. Tech
                      observationDbId: "16"
                      observationTimeStamp: 2011-06-14T22:06:51-04:00
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: winter 2012
                      value: "100"
                    - collector: B. Tech
                      observationDbId: "17"
                      observationTimeStamp: 2011-06-14T22:07:51-04:00
                      observationVariableDbId: MO_123:100003
                      observationVariableName: Carotenoid
                      season: winter 2012
                      value: "9"
                    - collector: B. Tech
                      observationDbId: "18"
                      observationTimeStamp: 2011-06-14T22:08:51-04:00
                      observationVariableDbId: MO_123:100004
                      observationVariableName: Root weight
                      season: winter 2012
                      value: "2"
                    plantNumber: "5"
                    plotNumber: "5"
                    programName: Program 1
                    replicate: "1"
                    studyDbId: "1003"
                    studyLocation: Peru
                    studyLocationDbId: "2"
                    studyName: Study 3
                    treatments: []
      deprecated: true
  /programs:
    get:
      tags:
      - Programs
      summary: Get the breeding Programs
      description: Call to retrieve a list of programs.
      parameters:
      - name: commonCropName
        in: query
        description: Filter by the common crop name. Exact match.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: programName
        in: query
        description: Filter by program name. Exact match.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: abbreviation
        in: query
        description: Filter by program abbreviation. Exact match.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/programsResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - abbreviation: P1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 1
                    objective: Global Population Improvement
                    programDbId: "1"
                    programName: Program 1
                  - abbreviation: P2
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 2
                    objective: XYZ
                    programDbId: "2"
                    programName: Program 2
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
  /seasons:
    get:
      tags:
      - Studies
      summary: Get the Seasons
      description: "Call to retrive all seasons in the database.\n\nA season is made\
        \ of 2 parts\n\n- The primary year \n\n- A term which defines a segment of\
        \ the year. \nThis could be a traditional season, like \"Spring\" or \"Summer\"\
        ; \nthis could be a month, like \"May\" or \"June\"; \nor this could be an\
        \ arbitrary season name which is meaningful to the breeding program like \"\
        PlantingTime_3\" or \"Season E\""
      parameters:
      - name: seasonDbId
        in: query
        description: The unique identifier for a season
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: season
        in: query
        description: The term to describe a given season. Example "Spring" OR "May"
          OR "PlantingTime7"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Spring
      - name: year
        in: query
        description: The 4 digit year of a season. Example "2017"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2017
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/seasonsResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 10
                    totalPages: 5
                  status: []
                result:
                  data:
                  - season: fall
                    seasonDbId: "1"
                    year: "2011"
                  - season: winter
                    seasonDbId: "2"
                    year: "2012"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
  /studies:
    get:
      tags:
      - Studies
      summary: Get the Studies
      description: |-
        Get list of studies

        Implementation Notes

        StartDate and endDate should be ISO8601 format for dates

        See Search Services for additional implementation details.
      parameters:
      - name: commonCropName
        in: query
        description: Common name for the crop associated with this study
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: studyType
        in: query
        description: DEPRECATED in v1.3 - see "studyTypeDbId"
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
      - name: studyTypeDbId
        in: query
        description: Filter based on study type unique identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: programDbId
        in: query
        description: Program filter to only return studies associated with given program
          id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locationDbId
        in: query
        description: Filter by location
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: seasonDbId
        in: query
        description: Filter by season or year
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: trialDbId
        in: query
        description: Filter by trial
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: studyDbId
        in: query
        description: Filter by study DbId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: germplasmDbIds
        in: query
        description: DEPRECATED in v1.3 - see /search/studies
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: observationVariableDbIds
        in: query
        description: DEPRECATED in v1.3 - see /search/studies
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: active
        in: query
        description: Filter active status true/false.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sortBy
        in: query
        description: Name of the field to sort by.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - studyDbId
          - trialDbId
          - programDbId
          - locationDbId
          - seasonDbId
          - studyTypeDbId
          - studyName
          - studyLocation
          - programName
      - name: sortOrder
        in: query
        description: Sort order direction. Ascending/Descending.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - ASC
          - desc
          - DESC
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studiesResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - active: "true"
                    additionalInfo:
                      studyObjective: Increase yield
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: 2014-01-01
                    locationDbId: "1"
                    locationName: Location 1
                    name: Study 1
                    programDbId: "1"
                    programName: Program 1
                    seasons:
                    - season: fall
                      seasonDbId: "1"
                      year: "2011"
                    - season: winter
                      seasonDbId: "2"
                      year: "2012"
                    startDate: 2013-01-01
                    studyDbId: "1001"
                    studyName: Study 1
                    studyType: Yield study
                    studyTypeDbId: "2"
                    studyTypeName: Yield study
                    trialDbId: "101"
                    trialName: Peru Yield Trial 1
                  - active: "true"
                    additionalInfo:
                      publications: pmid:23643517318968
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: 2015-01-01
                    locationDbId: "1"
                    locationName: Location 1
                    name: Study 2
                    programDbId: "1"
                    programName: Program 1
                    seasons:
                    - season: winter
                      seasonDbId: "2"
                      year: "2012"
                    startDate: 2014-01-01
                    studyDbId: "1002"
                    studyName: Study 2
                    studyType: Yield study
                    studyTypeDbId: "2"
                    studyTypeName: Yield study
                    trialDbId: "101"
                    trialName: Peru Yield Trial 1
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
  /studies/{studyDbId}:
    get:
      tags:
      - Studies
      summary: Get the details for a specific Study
      description: "Retrieve the information of the study required for field data\
        \ collection\n\nAn additionalInfo field was added to provide a controlled\
        \ vocabulary for less common data fields.\n\nLinked data\n\n- Observation\
        \ Variables: ```/brapi/v1/studies/{studyDbId}/observationvariables``` \n\n\
        - Germplasm: ```/brapi/v1/studies/{studyDbId}/germplasm``` \n\n- Observation\
        \ Units: ```/brapi/v1/studies/{studyDbId}/observationunits``` \n\n- Layout:\
        \ ```brapi/v1/studies/{studyDbId}/layout```"
      parameters:
      - name: studyDbId
        in: path
        description: Identifier of the study. Usually a number, could be alphanumeric.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studyResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  active: "true"
                  additionalInfo:
                    studyObjective: Increase yield
                  commonCropName: Tomatillo
                  contacts:
                  - contactDbId: "1"
                    email: a.breeder@brapi.org
                    instituteName: Plant Science Institute
                    name: A. Breeder
                    orcid: 0000-0002-0607-8728
                    type: Breeder
                  - contactDbId: "2"
                    email: b.breeder@brapi.org
                    instituteName: Plant Science Institute
                    name: B. Breeder
                    orcid: 0000-0002-0607-8729
                    type: Breeder
                  dataLinks:
                  - dataLinkName: image-archive12.zip
                    name: image-archive12.zip
                    type: Image archive
                    url: http://data.inra.fr/archive/multi-spect-flowering.zip
                  - dataLinkName: image-archive13.zip
                    name: image-archive13.zip
                    type: Image archive
                    url: http://data.inra.fr/archive/biomass-img.zip
                  documentationURL: https://brapi.org
                  endDate: 2014-01-01
                  lastUpdate:
                    timestamp: 2015-01-01T00:00:00-05:00
                    version: "1.1"
                  license: https://creativecommons.org/licenses/by/4.0
                  location:
                    abbreviation: L1
                    abreviation: L1
                    additionalInfo:
                      adm1: Junin
                      adm2: Chanchamayo
                      adm3: San Ramon
                      annualMeanTemperature: "23"
                      annualTotalPrecipitation: "360"
                      cont: South America
                      creg: LAC
                      local: San Ramon
                    altitude: 828
                    countryCode: PER
                    countryName: Peru
                    documentationURL: https://brapi.org
                    instituteAddress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteAdress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteName: Plant Science Institute
                    latitude: -11.1274995803833
                    locationDbId: "1"
                    locationName: Location 1
                    locationType: Storage location
                    longitude: -75.35639190673828
                    name: Location 1
                  seasons:
                  - fall 2011
                  - winter 2012
                  startDate: 2013-01-01
                  studyDbId: "1001"
                  studyDescription: Field yield phenotyping study
                  studyName: Study 1
                  studyType: Yield study
                  studyTypeDbId: "2"
                  studyTypeName: Yield study
                  trialDbId: "101"
                  trialName: Peru Yield Trial 1
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - The requested object DbId is
                not found
  /studies/{studyDbId}/germplasm:
    get:
      tags:
      - Studies
      - Germplasm
      summary: Get the Germplasm associated with a specific Study
      description: Get the available Germplasm which are associated with this study
      parameters:
      - name: studyDbId
        in: path
        description: Identifier of the study. Usually a number, could be alphanumeric.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/germplasmSummaryListResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 4
                    totalPages: 2
                  status: []
                result:
                  data:
                  - accessionNumber: A000001
                    acquisitionDate: 1984-01-01
                    biologicalStatusOfAccessionCode: 300
                    breedingMethodDbId: bm1
                    commonCropName: G000001
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000001
                    documentationURL: https://brapi.org
                    donors:
                    - donorAccessionNumber: A001230
                      donorInstituteCode: INRA
                      germplasmPUI: https://doi.org/10.1109/5.771073
                    - donorAccessionNumber: A004560
                      donorInstituteCode: INRA
                      germplasmPUI: https://doi.org/10.1109/5.231123
                    entryNumber: "2"
                    genus: Fructus
                    germplasmDbId: "1"
                    germplasmName: Name001
                    germplasmPUI: http://pui.per/accession/A000001
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - landrace 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: "2340"
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  - accessionNumber: A000001
                    acquisitionDate: 1984-01-01
                    biologicalStatusOfAccessionCode: 300
                    breedingMethodDbId: bm1
                    commonCropName: G000001
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000001
                    documentationURL: https://brapi.org
                    donors:
                    - donorAccessionNumber: A001230
                      donorInstituteCode: INRA
                      germplasmPUI: https://doi.org/10.1109/5.771073
                    - donorAccessionNumber: A004560
                      donorInstituteCode: INRA
                      germplasmPUI: https://doi.org/10.1109/5.231123
                    entryNumber: "2"
                    genus: Fructus
                    germplasmDbId: "1"
                    germplasmName: Name001
                    germplasmPUI: http://pui.per/accession/A000001
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - landrace 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: "2340"
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  studyDbId: "1001"
                  trialName: Peru Yield Trial 1
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - The requested object DbId is
                not found
  /studies/{studyDbId}/layouts:
    get:
      tags:
      - Studies
      summary: Get the plot layout details for a specific Study
      description: |-
        Retrive the layout details for a study. Returns an array of observation unit position data which describes where each unit and germplasm is located within the study layout

        Retrieve the plot layout of the study with id {id}.

        For each observationUnit within a study, return the `block`, `replicate`, and `entryType` values as well as the `X` and `Y` coordinates. `entryType` can be "check", "test", or "filler".

        Also return some human readable meta data about the observationUnit and germplasm.
      parameters:
      - name: studyDbId
        in: path
        description: Identifier of the study. Usually a number, could be alphanumeric.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationUnitPositionsResponse_1'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 4
                    totalPages: 2
                  status: []
                result:
                  data:
                  - X: "1"
                    Y: "1"
                    additionalInfo: {}
                    blockNumber: "1"
                    entryType: TEST
                    germplasmDbId: "1"
                    germplasmName: Name001
                    observationLevel: plot
                    observationUnitDbId: "1"
                    observationUnitName: Plot 1
                    replicate: "0"
                    studyDbId: "1001"
                  - X: "1"
                    Y: "1"
                    additionalInfo: {}
                    blockNumber: "1"
                    entryType: TEST
                    germplasmDbId: "1"
                    germplasmName: Name001
                    observationLevel: plant
                    observationUnitDbId: "2"
                    observationUnitName: Plant 1
                    replicate: "0"
                    studyDbId: "1001"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - The requested object DbId is
                not found
    put:
      tags:
      - Studies
      summary: Update an existing Study with new layout details
      description: "Modify a study layout\n\nUpdate the layout data for a set of observation\
        \ units within a study. Each layout object is a subset of fields within an\
        \ observationUnit, so it doesnt make sense to create a new layout object by\
        \ itself.\n\nImplementation Notes:\n\n+ If any of the fields in the request\
        \ object is missing, that piece of data will not be updated. \n\n+ If an observationUnitDbId\
        \ can not be found within the given study, an error will be returned. \n\n\
        + `entryType` can have the values \"check\", \"test\", or \"filler\". \n\n\
        + The response should match the structure of the response from `GET studies/{studyDbId}/layout`,\
        \ but it should only contain the layout objects which have been updated by\
        \ the PUT request. Also, pagination is not available in the response."
      parameters:
      - name: studyDbId
        in: path
        description: Identifier of the study. Usually a number, could be alphanumeric.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      requestBody:
        description: The request body for updateing a study layout
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studyLayoutRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationUnitPositionsResponse_1'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data:
                  - X: "1"
                    Y: "1"
                    additionalInfo: {}
                    blockNumber: "0"
                    entryType: CHECK
                    germplasmDbId: "2"
                    germplasmName: Name002
                    observationLevel: plot
                    observationUnitDbId: "11"
                    observationUnitName: Plot 6
                    replicate: "0"
                    studyDbId: "1003"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - The requested object DbId is
                not found
  /trials:
    get:
      tags:
      - Trials
      summary: Get the breeding Trials
      description: Retrieve a filtered list of Trials. A Trial is a collection of
        studies
      parameters:
      - name: commonCropName
        in: query
        description: Common name for the crop associated with this trial
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: programDbId
        in: query
        description: Program filter to only return trials associated with given program
          id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locationDbId
        in: query
        description: Filter by location
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: Filter active status true/false.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sortBy
        in: query
        description: Sort order. Name of the field to sorty by.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - trialDbId
          - trialName
          - programDbId
          - programName
          - locationDbId
          - startDate
          - endDate
      - name: sortOrder
        in: query
        description: 'Sort order direction: asc/desc'
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - ASC
          - desc
          - DESC
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trialsResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 10
                    totalPages: 5
                  status: []
                result:
                  data:
                  - active: false
                    additionalInfo:
                      donorName: Donor1
                      publications: doi:10.2345/GEZG3T23535
                      specialProject: Project1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: 2013-07-05
                    programDbId: "1"
                    programName: Program 1
                    startDate: 2013-01-01
                    studies:
                    - locationDbId: "1"
                      locationName: Location 1
                      studyDbId: "1001"
                      studyName: Study 1
                    - locationDbId: "1"
                      locationName: Location 1
                      studyDbId: "1002"
                      studyName: Study 2
                    trialDbId: "101"
                    trialName: Peru Yield Trial 1
                  - active: false
                    additionalInfo:
                      donorName: Donor1
                      publications: doi:10.2345/GEZG3T23535
                      specialProject: Project1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: 2013-07-05
                    programDbId: "1"
                    programName: Program 1
                    startDate: 2013-01-01
                    studies:
                    - locationDbId: "1"
                      locationName: Location 1
                      studyDbId: "1001"
                      studyName: Study 1
                    - locationDbId: "1"
                      locationName: Location 1
                      studyDbId: "1002"
                      studyName: Study 2
                    trialDbId: "101"
                    trialName: Peru Yield Trial 1
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
components:
  schemas:
    VariableBaseClass:
      required:
      - method
      - scale
      - trait
      type: object
      properties:
        contextOfUse:
          type: array
          description: 'Indication of how trait is routinely used. (examples: ["Trial
            evaluation", "Nursery evaluation"])'
          items:
            type: string
        crop:
          type: string
          description: 'Crop name (examples: "Maize", "Wheat")'
        defaultValue:
          type: string
          description: 'Variable default value. (examples: "red", "2.3", etc.)'
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        growthStage:
          type: string
          description: 'Growth stage at which measurement is made (examples: "flowering")'
        institution:
          type: string
          description: Name of institution submitting the variable
        language:
          type: string
          description: 2 letter ISO code for the language of submission of the variable.
        method:
          $ref: '#/components/schemas/method'
        ontologyDbId:
          type: string
          description: DEPRECATED in v1.3 - see "this.ontologyReference.ontologyDbId"
          deprecated: true
        ontologyName:
          type: string
          description: DEPRECATED in v1.3 - see "this.ontologyReference.ontologyName"
          deprecated: true
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        scale:
          $ref: '#/components/schemas/scale'
        scientist:
          type: string
          description: Name of scientist submitting the variable.
        status:
          type: string
          description: 'Variable status. (examples: "recommended", "obsolete", "legacy",
            etc.)'
        submissionTimestamp:
          type: string
          description: Timestamp when the Variable was added (ISO 8601)
          format: date-time
        synonyms:
          type: array
          description: Other variable names
          items:
            type: string
        trait:
          $ref: '#/components/schemas/trait'
        xref:
          type: string
          description: Cross reference of the variable term to a term from an external
            ontology or to a database of a major system.
    WSMIMEDataTypes:
      type: string
      enum:
      - application/json
      - text/csv
      - text/tsv
      - application/flapjack
    alleleMatrixDetails:
      type: object
      properties:
        description:
          type: string
          description: How the matrix was generated
        lastUpdated:
          type: string
          description: A date format
          format: date-time
        matrixDbId:
          type: string
          description: ID of the matrix
        matrixName:
          type: string
          description: Name of the matrix
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "matrixName"
          deprecated: true
        studyDbId:
          type: string
          description: Link to the study where the matrix was produced
    alleleMatrixSearchRequest:
      type: object
      properties:
        expandHomozygotes:
          type: boolean
          description: Should homozygotes be expanded (true) or collapsed into a single
            occurence (false)
        format:
          type: string
          description: The data format of the response data. ie "json", "tsv", etc
        markerDbId:
          type: array
          description: An ID which uniquely identifies a Marker
          items:
            type: string
        markerProfileDbId:
          type: array
          description: An ID which uniquely identifies a Marker Profile
          items:
            type: string
        markerprofileDbId:
          type: array
          description: DEPRECATED in v1.3 - see "markerProfileDbId" (camel case)
          deprecated: true
          items:
            type: string
        matrixDbId:
          type: array
          description: An ID which uniquely identifies an Allele Matrix
          items:
            type: string
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        sepPhased:
          type: string
          description: The string to use as a separator for phased allele calls.
        sepUnphased:
          type: string
          description: The string to use as a separator for unphased allele calls.
        unknownString:
          type: string
          description: The string to use as a representation for missing data.
    alleleMatrixValues:
      type: object
      properties:
        data:
          type: array
          description: 'Is an array of arrays; each inner array has three entries:
            ```markerDbId```, ```markerProfileDbId```, ```alleleCall```. Scores have
            to be represented as described further up. e.g. unknown data as "N", etc.
            Missing data can be skipped.'
          items:
            type: array
            items:
              type: string
    asynchStatusMetadata:
      type: object
      properties:
        asynchStatus:
          required:
          - asynchId
          properties:
            asynchId:
              type: string
              description: The unique ID to poll for asynchronous results
            endTime:
              type: string
              format: date
            percentComplete:
              maximum: 100
              minimum: 0
              type: integer
            startTime:
              type: string
              format: date
            status:
              type: string
              enum:
              - STARTED
              - PENDING
              - FINISHED
              - ERROR
    breedingMethod:
      required:
      - breedingMethodDbId
      type: object
      properties:
        abbreviation:
          type: string
          description: an abbreviation for the name of this breeding method
        breedingMethodDbId:
          type: string
          description: the unique identifier for this breeding method
        breedingMethodName:
          type: string
          description: human readable name of the breeding method
        description:
          type: string
          description: human readable description of the breeding method
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "breedingMethodName"
          deprecated: true
    call:
      required:
      - call
      - dataTypes
      - methods
      type: object
      properties:
        call:
          type: string
          description: The name of the available call as recorded in the documentation
        dataTypes:
          type: array
          description: The possible data formats returned by the available call
          items:
            $ref: '#/components/schemas/WSMIMEDataTypes'
        datatypes:
          type: array
          description: DEPRECATED in v1.3 - see "dataTypes" (camel case)
          deprecated: true
          items:
            $ref: '#/components/schemas/WSMIMEDataTypes'
        methods:
          type: array
          description: The possible HTTP Methods to be used with the available call
          items:
            type: string
            enum:
            - GET
            - POST
            - PUT
            - DELETE
        versions:
          type: array
          description: The supported versions of a particular call
          items:
            type: string
            enum:
            - "1.0"
            - "1.1"
            - "1.2"
            - "1.3"
    contact:
      required:
      - contactDbId
      type: object
      properties:
        contactDbId:
          type: string
          description: The ID which uniquely identifies this contact
        email:
          type: string
          description: 'The contacts email address '
        instituteName:
          type: string
          description: The name of the institution which this contact is part of
        name:
          type: string
          description: The full name of this contact person
        orcid:
          type: string
          description: The Open Researcher and Contributor ID for this contact person
            (orcid.org)
        type:
          type: string
          description: 'The type of person this contact represents (ex: Coordinator,
            Scientist, PI, etc.)'
    Context:
      description: "The JSON-LD Context is used to provide JSON-LD definitions to each field in a JSON object. By providing an array of context file urls, a BrAPI response object becomes JSON-LD compatible.  \n\nFor more information, see https://w3c.github.io/json-ld-syntax/#the-context"
      example:
      - https://brapi.org/jsonld/context/metadata.jsonld
      items:
        format: uri
        type: string
      title: context
      type: array
    dataLink:
      type: object
      properties:
        dataLinkName:
          type: string
          description: The name of the external data link
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "dataLinkName"
          deprecated: true
        type:
          type: string
          description: The type of external data link
        url:
          type: string
          description: The URL which links to external data
    dataTypesResponseResult:
      title: dataTypesResponseResult
      type: object
      properties:
        data:
          type: array
          items:
            type: string
    Event:
      properties:
        additionalInfo:
          additionalProperties:
            type: string
          description: Additional arbitrary info
          type: object
        date:
          description: 'A list of dates when the event occured


            MIAPPE V1.1 (DM-68) Event date - Date and time of the event.'
          example:
            - '2018-10-08T18:15:11Z'
            - '2018-11-09T18:16:12Z'
          items:
            format: date-time
            type: string
          type: array
        eventDbId:
          description: Internal database identifier
          example: 8566d4cb
          type: string
        eventDescription:
          description: 'A detailed, human-readable description of this event


            MIAPPE V1.1 (DM-67) Event description - Description of the event, including details such as amount applied and possibly duration of the event. '
          example: A set of plots was watered
          type: string
        eventParameters:
          description: A list of objects describing additional event parameters. Each of the following accepts a human-readable value or URI
          example:
            - key: http://www.example.fr/vocabulary/2018#hasContact,
              value: http://www.example.fr/id/agent/marie,
              valueRdfType: http://xmlns.com/foaf/0.1/Agent,
            - key: fertilizer
              value: nitrogen
              valueRdfType: null
          items:
            properties:
              key:
                description: Specifies the relationship between the event and the given property. E.g. fertilizer, operator
                example: operator
                type: string
              rdfValue:
                description: The type of the value given above, e.g. http://xmlns.com/foaf/0.1/Agent
                example: http://xmlns.com/foaf/0.1/Agent
                type: string
              value:
                description: The value of the property for this event. E.g. nitrogen, John Doe
                example: Bob Robertson
                type: string
            type: object
          type: array
        eventType:
          description: 'General category for this event (e.g. Sowing, Watering, Rain). Each eventType should correspond to exactly one eventTypeDbId, if provided.


            MIAPPE V1.1 (DM-65) Event type - Short name of the event.'
          example: Watering
          type: string
        eventTypeDbId:
          description: 'An identifier for this event type, in the form of an ontology class reference


            MIAPPE V1.1 (DM-66) Event accession number - Accession number of the event type in a suitable controlled vocabulary (Crop Ontology).'
          example: 4e7d691e
          type: string
        observationUnitDbIds:
          description: A list of the affected observation units. If this parameter is not given, it is understood that the event affected all units in the study
          example:
            - 8439eaff
            - d7682e7a
            - 305ae51c
          items:
            type: string
          type: array
        studyDbId:
          description: The study in which the event occurred
          example: 2cc2001f
          type: string
      required:
        - eventDbId
        - eventType
      type: object
    genomeMap:
      required:
      - commonCropName
      - mapDbId
      - type
      type: object
      properties:
        comments:
          type: string
          description: Additional comments
        commonCropName:
          type: string
          description: The common name of the crop, found from "GET /commoncropnames"
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        linkageGroupCount:
          type: integer
          description: The number of linkage groups present in this genome map
          format: int32
        mapDbId:
          type: string
          description: The ID which uniquely identifies this genome map
        mapName:
          type: string
          description: A human readable name for this genome map
        markerCount:
          type: integer
          description: The number of markers present in this genome map
          format: int32
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "mapName"
          deprecated: true
        publishedDate:
          type: string
          description: The date this genome was published
          format: date
        scientificName:
          type: string
          description: Full scientific binomial format name. This includes Genus,
            Species, and Sub-species
        species:
          type: string
          description: DEPRECATED in v1.3 - See "scientificName"
          deprecated: true
        type:
          type: string
          description: The type of map this represents, ussually "Genetic"
        unit:
          type: string
          description: The units used to describe the data in this map
    genomeMapDetails:
      type: object
      properties:
        data:
          type: array
          description: List of linkage group details associated with a given map
          items:
            $ref: '#/components/schemas/linkageGroup'
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        linkageGroups:
          type: array
          description: '**Deprecated** Use "data"'
          items:
            $ref: '#/components/schemas/linkageGroup'
        mapDbId:
          type: string
          description: The ID which uniquely identifies this genome map
        mapName:
          type: string
          description: A human readable name for this map
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "mapName"
          deprecated: true
        type:
          type: string
          description: The type of map this represents, ussually "Genetic" or "Physical"
        unit:
          type: string
          description: The units used to describe the data in this map
    geoJSON:
      title: GeoJSON
      type: object
      properties:
        geometry:
          title: GeoJSON Geometry
          type: object
          oneOf:
          - title: Point
            type: object
            properties:
              coordinates:
                $ref: '#/components/schemas/position'
              type:
                type: string
                enum:
                - Point
            description: "Example \n\n    [ -76.506042, 42.417373 ]"
          - title: Polygon
            type: object
            properties:
              coordinates:
                $ref: '#/components/schemas/polygon'
              type:
                type: string
                enum:
                - Polygon
            description: "Example \n\n    [ \n    \n      [ \n      \n        [ -77.456654,\
              \ 42.241133 ], \n        \n        [ -75.414133, 41.508282 ],\n    \
              \  \n        [ -76.506042, 42.417373 ], \n        \n        [ -77.456654,\
              \ 42.241133 ] \n      \n      ] \n    \n    ]"
        type:
          type: string
          enum:
          - Feature
      description: One geometry as defined by GeoJSON (RFC 7946). All coordinates
        are decimal values on the WGS84 geographic coordinate reference system.
    germplasm:
      type: object
      properties:
        accessionNumber:
          type: string
          description: This is the unique identifier for accessions within a genebank,
            and is assigned when a sample is entered into the genebank collection
        acquisitionDate:
          type: string
          description: The date this germplasm was aquired by the genebank (MCPD)
          format: date
        biologicalStatusOfAccessionCode:
          type: integer
          description: The 3 digit code representing the biological status of the
            accession (MCPD)
        breedingMethodDbId:
          type: string
          description: The unique identifier for the breeding method used to create
            this germplasm
        commonCropName:
          type: string
          description: Common name for the crop (MCPD)
        countryOfOriginCode:
          type: string
          description: 3-letter ISO 3166-1 code of the country in which the sample
            was originally collected (MCPD)
        defaultDisplayName:
          type: string
          description: Human readable name used for display purposes
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        donors:
          type: array
          description: List of donor institutes (MCPD)
          items:
            $ref: '#/components/schemas/germplasm_donors'
        genus:
          type: string
          description: DEPRECATED in v1.3 - see "germplasmGenus"
          deprecated: true
        germplasmDbId:
          type: string
          description: The ID which uniquely identifies a germplasm within the given
            database server
        germplasmGenus:
          type: string
          description: Genus name for taxon. Initial uppercase letter required. (MCPD)
        germplasmName:
          type: string
          description: Name of the germplasm. It can be the prefered name and does
            not have to be unique.
        germplasmPUI:
          type: string
          description: The Permanent Unique Identifier which represents a germplasm
        germplasmSpecies:
          type: string
          description: Specific epithet portion of the scientific name in lowercase
            letters. (MCPD)
        instituteCode:
          type: string
          description: The code for the Institute that has bred the material. (MCPD)
        instituteName:
          type: string
          description: The name of the institution which bred the material (MCPD)
        pedigree:
          type: string
          description: The cross name and optional selection history.
        seedSource:
          type: string
          description: 'The source of the seed '
        species:
          type: string
          description: DEPRECATED in v1.3 - see "germplasmSpecies"
          deprecated: true
        speciesAuthority:
          type: string
          description: The authority organization responsible for tracking and maintaining
            the species name (MCPD)
        subtaxa:
          type: string
          description: Subtaxon can be used to store any additional taxonomic identifier.
            (MCPD)
        subtaxaAuthority:
          type: string
          description: ' The authority organization responsible for tracking and maintaining
            the subtaxon information (MCPD)'
        synonyms:
          type: array
          description: List of alternative names or IDs used to reference this germplasm
          items:
            type: string
        taxonIds:
          type: array
          description: The list of IDs for this SPECIES from different sources. If
            present, NCBI Taxon should be always listed as "ncbiTaxon" preferably
            with a purl. The rank of this ID should be species.
          items:
            $ref: '#/components/schemas/taxonID'
        typeOfGermplasmStorageCode:
          type: array
          description: The 2 digit code representing the type of storage this germplasm
            is kept in at a genebank. (MCPD)
          items:
            type: string
    germplasmAttribute:
      type: object
      properties:
        attributeCode:
          type: string
          description: Short abbreviation which represents this attribute
        attributeDbId:
          type: string
          description: The ID which uniquely identifies this attribute within the
            given database server
        attributeName:
          type: string
          description: The human readable name of this attribute
        determinedDate:
          type: string
          description: The date the value of this attribute was determined for a given
            germplasm
          format: date
        value:
          type: string
          description: The value of this attribute for a given germplasm
    germplasmAttributeCategory:
      type: object
      properties:
        attributeCategoryDbId:
          type: string
          description: The ID which uniquely identifies this attribute category within
            the given database server
        attributeCategoryName:
          type: string
          description: 'A human readable name for this attribute category. Very similar
            to Trait class. (examples: "morphologic", "phenologic", "agronomic", "physiologic",
            "abiotic stress", "biotic stress", "biochemic", "quality traits", "fertility",
            etc.)'
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "attributeCategoryName"
          deprecated: true
    germplasmAttributeDef:
      allOf:
      - $ref: '#/components/schemas/VariableBaseClass'
      - required:
        - attributeDbId
        - attributeName
        type: object
        properties:
          attributeCategoryDbId:
            type: string
            description: General category for the attribute. very similar to Trait
              class.
          attributeDbId:
            type: string
            description: The ID which uniquely identifies this attribute within the
              given database server
          attributeName:
            type: string
            description: A human readable name for this attribute
          code:
            type: string
            description: DEPRECATED in v1.3 - see "this.trait.alternativeAbbreviations"
            deprecated: true
          datatype:
            type: string
            description: DEPRECATED in v1.3 - see "this.scale.dataType"
            deprecated: true
          description:
            type: string
            description: A human readable description of this attribute
          name:
            type: string
            description: DEPRECATED in v1.3 - Use "this.attributeName"
            deprecated: true
          uri:
            type: string
            description: DEPRECATED in v1.3 - see "this.xref"
            deprecated: true
          values:
            type: string
            description: DEPRECATED in v1.3 - see "this.scale.validValues"
            deprecated: true
    germplasmAttributeList:
      type: object
      properties:
        data:
          type: array
          description: List of attributes associated with the given germplasm
          items:
            $ref: '#/components/schemas/germplasmAttribute'
        germplasmDbId:
          type: string
          description: The ID which uniquely identifies a germplasm within the given
            database server
    germplasmMCPD:
      type: object
      properties:
        accessionNames:
          type: array
          description: 'MCPD (v2.1) (ACCENAME) 11. Either a registered or other designation
            given to the material received, other than the donors accession number
            (23) or collecting number (3). First letter uppercase. Multiple names
            are separated by a semicolon without space. Example: Accession name: Bogatyr;Symphony;Emma.'
          items:
            type: string
        accessionNumber:
          type: string
          description: MCPD (v2.1) (ACCENUMB) 2. This is the unique identifier for
            accessions within a genebank, and is assigned when a sample is entered
            into the genebank collection (e.g. "PI 113869").
        acquisitionDate:
          type: string
          description: MCPD (v2.1) (ACQDATE) 12. Date on which the accession entered
            the collection [YYYYMMDD] where YYYY is the year, MM is the month and
            DD is the day. Missing data (MM or DD) should be indicated with hyphens
            or "00" [double zero].
        acquisitionSourceCode:
          type: string
          description: 'MCPD (v2.1) (COLLSRC) 21. The coding scheme proposed can be
            used at 2 different levels of detail: either by using the general codes
            (in boldface) such as 10, 20, 30, 40, etc., or by using the more specific
            codes, such as 11, 12, etc. 10) Wild habitat 11) Forest or woodland 12)
            Shrubland 13) Grassland 14) Desert or tundra 15) Aquatic habitat 20) Farm
            or cultivated habitat 21) Field 22) Orchard 23) Backyard, kitchen or home
            garden (urban, peri-urban or rural) 24) Fallow land 25) Pasture 26) Farm
            store 27) Threshing floor 28) Park 30) Market or shop 40) Institute, Experimental
            station, Research organization, Genebank 50) Seed company 60) Weedy, disturbed
            or ruderal habitat 61) Roadside 62) Field margin 99) Other (Elaborate
            in REMARKS field) '
          enum:
          - "10"
          - "11"
          - "12"
          - "13"
          - "14"
          - "15"
          - "20"
          - "21"
          - "22"
          - "23"
          - "24"
          - "25"
          - "26"
          - "27"
          - "28"
          - "30"
          - "40"
          - "50"
          - "60"
          - "61"
          - "62"
          - "99"
        alternateIDs:
          type: array
          description: 'MCPD (v2.1) (OTHERNUMB) 24. Any other identifiers known to
            exist in other collections for this accession. Use the following format:
            INSTCODE:ACCENUMB;INSTCODE:identifier;INSTCODE and identifier are separated
            by a colon without space. Pairs of INSTCODE and identifier are separated
            by a semicolon without space. When the institute is not known, the identifier
            should be preceded by a colon. '
          items:
            type: string
        ancestralData:
          type: string
          description: MCPD (v2.1) (ANCEST) 20. Information about either pedigree
            or other description of ancestral information (e.g. parent variety in
            case of mutant or selection). For example a pedigree 'Hanna/7*Atlas//Turk/8*Atlas'
            or a description 'mutation found in Hanna', 'selection from Irene' or
            'cross involving amongst others Hanna and Irene'.
        biologicalStatusOfAccessionCode:
          type: string
          description: 'MCPD (v2.1) (SAMPSTAT) 19. The coding scheme proposed can
            be used at 3 different levels of detail: either by using the general codes
            (in boldface) such as 100, 200, 300, 400, or by using the more specific
            codes such as 110, 120, etc. 100) Wild 110) Natural 120) Semi-natural/wild
            130) Semi-natural/sown 200) Weedy 300) Traditional cultivar/landrace 400)
            Breeding/research material 410) Breeders line 411) Synthetic population
            412) Hybrid 413) Founder stock/base population 414) Inbred line (parent
            of hybrid cultivar) 415) Segregating population 416) Clonal selection
            420) Genetic stock 421) Mutant (e.g. induced/insertion mutants, tilling
            populations) 422) Cytogenetic stocks (e.g. chromosome addition/substitution,
            aneuploids,  amphiploids) 423) Other genetic stocks (e.g. mapping populations)
            500) Advanced or improved cultivar (conventional breeding methods) 600)
            GMO (by genetic engineering) 999) Other (Elaborate in REMARKS field)'
          enum:
          - "100"
          - "110"
          - "120"
          - "130"
          - "200"
          - "300"
          - "400"
          - "410"
          - "411"
          - "412"
          - "413"
          - "414"
          - "415"
          - "416"
          - "420"
          - "421"
          - "422"
          - "423"
          - "500"
          - "600"
          - "999"
        breedingInstitutes:
          type: array
          items:
            $ref: '#/components/schemas/germplasmMCPD_breedingInstitutes'
        collectingInfo:
          $ref: '#/components/schemas/germplasmMCPD_collectingInfo'
        commonCropName:
          type: string
          description: 'MCPD (v2.1) (CROPNAME) 10. Common name of the crop. Example:
            "malting barley", "macadamia", "mas". '
        countryOfOrigin:
          type: string
          description: 'MCPD (v2.1) (ORIGCTY) 13. 3-letter ISO 3166-1 code of the
            country in which the sample was originally collected (e.g. landrace, crop
            wild relative, farmers" variety), bred or selected (breeding lines, GMOs,
            segregating populations, hybrids, modern cultivars, etc.). Note: Descriptors
            14 to 16 below should be completed accordingly only if it was "collected".'
        donorInfo:
          $ref: '#/components/schemas/germplasmMCPD_donorInfo'
        genus:
          type: string
          description: MCPD (v2.1) (GENUS) 5. Genus name for taxon. Initial uppercase
            letter required.
        germplasmDbId:
          type: string
          description: A unique identifier which identifies a germplasm in this database
        germplasmPUI:
          type: string
          description: MCPD (v2.1) (PUID) 0. Any persistent, unique identifier assigned
            to the accession so it can be unambiguously referenced at the global level
            and the information associated with it harvested through automated means.
            Report one PUID for each accession. The Secretariat of the International
            Treaty on Plant Genetic Resources for Food and Agriculture (PGRFA) is
            facilitating the assignment of a persistent unique identifier (PUID),
            in the form of a DOI, to PGRFA at the accession level (http://www.planttreaty.org/doi).
            Genebanks not applying a true PUID to their accessions should use, and
            request recipients to use, the concatenation of INSTCODE, ACCENUMB, and
            GENUS as a globally unique identifier similar in most respects to the
            PUID whenever they exchange information on accessions with third parties
            (e.g. NOR017:NGB17773:ALLIUM).
        instituteCode:
          type: string
          description: MCPD (v2.1) (INSTCODE) 1. FAO WIEWS code of the institute where
            the accession is maintained. The codes consist of the 3-letter ISO 3166
            country code of the country where the institute is located plus a number
            (e.g. COL001). The current set of institute codes is available from http://www.fao.org/wiews.
            For those institutes not yet having an FAO Code, or for those with "obsolete"
            codes, see "Common formatting rules (v)".
        mlsStatus:
          type: string
          description: MCPD (v2.1) (MLSSTAT) 27. The status of an accession with regards
            to the Multilateral System (MLS) of the International Treaty on Plant
            Genetic Resources for Food and Agriculture. Leave the value empty if the
            status is not known 0 No (not included) 1 Yes (included) 99 Other (elaborate
            in REMARKS field, e.g. "under development")
          enum:
          - ""
          - "0"
          - "1"
          - "99"
        remarks:
          type: string
          description: MCPD (v2.1) (REMARKS) 28. The remarks field is used to add
            notes or to elaborate on descriptors with value 99 or 999 (= Other). Prefix
            remarks with the field name they refer to and a colon (:) without space
            (e.g. COLLSRC:riverside). Distinct remarks referring to different fields
            are separated by semicolons without space.
        safetyDuplicateInstitues:
          type: array
          items:
            $ref: '#/components/schemas/germplasmMCPD_safetyDuplicateInstitues'
        species:
          type: string
          description: 'MCPD (v2.1) (SPECIES) 6. Specific epithet portion of the scientific
            name in lowercase letters. Only the following abbreviation is allowed:
            "sp." '
        speciesAuthority:
          type: string
          description: MCPD (v2.1) (SPAUTHOR) 7. Provide the authority for the species
            name.
        storageTypeCodes:
          type: array
          description: MCPD (v2.1) (STORAGE) 26. If germplasm is maintained under
            different types of storage, multiple choices are allowed, separated by
            a semicolon (e.g. 20;30). (Refer to FAO/IPGRI Genebank Standards 1994
            for details on storage type.) 10) Seed collection 11) Short term 12) Medium
            term 13) Long term 20) Field collection 30) In vitro collection 40) Cryopreserved
            collection 50) DNA collection 99) Other (elaborate in REMARKS field)
          items:
            type: string
            enum:
            - "10"
            - "11"
            - "12"
            - "13"
            - "20"
            - "30"
            - "40"
            - "50"
            - "99"
        subtaxon:
          type: string
          description: 'MCPD (v2.1) (SUBTAXA) 8. Subtaxon can be used to store any
            additional taxonomic identifier. The following abbreviations are allowed:
            "subsp." (for subspecies); "convar." (for convariety); "var." (for variety);
            "f." (for form); "Group" (for "cultivar group").'
        subtaxonAuthority:
          type: string
          description: MCPD (v2.1) (SUBTAUTHOR) 9. Provide the subtaxon authority
            at the most detailed taxonomic level.
    germplasmMarkerprofilesList:
      type: object
      properties:
        germplasmDbId:
          type: string
          description: The ID which uniquely identifies a germplasm within the given
            database server
        markerProfileDbIds:
          type: array
          description: The ID which uniquely identifies a marker profile within the
            given database server
          items:
            type: string
        markerprofileDbIds:
          type: array
          description: DEPRECATED in v1.3 - see "markerProfileDbIds" (camel case)
          deprecated: true
          items:
            type: string
    germplasmSearchRequest:
      type: object
      properties:
        accessionNumbers:
          type: array
          description: List unique identifiers for accessions within a genebank
          items:
            type: string
        commonCropNames:
          type: array
          description: List crops to search by
          items:
            type: string
        germplasmDbIds:
          type: array
          description: List of IDs which uniquely identify germplasm
          items:
            type: string
        germplasmGenus:
          type: array
          description: List of Genus names to identify germplasm
          items:
            type: string
        germplasmNames:
          type: array
          description: List of human readable names to identify germplasm
          items:
            type: string
        germplasmPUIs:
          type: array
          description: List of Permanent Unique Identifiers to identify germplasm
          items:
            type: string
        germplasmSpecies:
          type: array
          description: List of Species names to identify germplasm
          items:
            type: string
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
    germplasmSummary:
      type: object
      properties:
        accessionNumber:
          type: string
          description: This is the unique identifier for accessions within a genebank,
            and is assigned when a sample is entered into the genebank collection
        acquisitionDate:
          type: string
          description: The date this germplasm was aquired by the genebank (MCPD)
          format: date
        biologicalStatusOfAccessionCode:
          type: integer
          description: The 3 digit code representing the biological status of the
            accession (MCPD)
        breedingMethodDbId:
          type: string
          description: The unique identifier for the breeding method used to create
            this germplasm
        commonCropName:
          type: string
          description: Common name for the crop (MCPD)
        countryOfOriginCode:
          type: string
          description: 3-letter ISO 3166-1 code of the country in which the sample
            was originally collected (MCPD)
        defaultDisplayName:
          type: string
          description: Human readable name used for display purposes
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        donors:
          type: array
          description: List of donor institutes (MCPD)
          items:
            $ref: '#/components/schemas/germplasm_donors'
        entryNumber:
          type: string
          description: '** Deprecated ** use /studies/{studyDbId/layout for positional
            germplasm relationships'
        genus:
          type: string
          description: Genus name for taxon. Initial uppercase letter required. (MCPD)
        germplasmDbId:
          type: string
          description: The ID which uniquely identifies a germplasm within the given
            database server
        germplasmName:
          type: string
          description: Name of the germplasm. It can be the prefered name and does
            not have to be unique.
        germplasmPUI:
          type: string
          description: The Permanent Unique Identifier which represents a germplasm
        instituteCode:
          type: string
          description: The code for the Institute that has bred the material. (MCPD)
        instituteName:
          type: string
          description: The name of the institution which bred the material (MCPD)
        pedigree:
          type: string
          description: The cross name and optional selection history.
        seedSource:
          type: string
          description: 'The source of the seed '
        species:
          type: string
          description: Specific epithet portion of the scientific name in lowercase
            letters. (MCPD)
        speciesAuthority:
          type: string
          description: The authority organization responsible for tracking and maintaining
            the species name (MCPD)
        subtaxa:
          type: string
          description: Subtaxon can be used to store any additional taxonomic identifier.
            (MCPD)
        subtaxaAuthority:
          type: string
          description: ' The authority organization responsible for tracking and maintaining
            the subtaxon information (MCPD)'
        synonyms:
          type: array
          description: List of alternative names or IDs used to reference this germplasm
          items:
            type: string
        taxonIds:
          type: array
          description: The list of IDs for this SPECIES from different sources. If
            present, NCBI Taxon should be always listed as "ncbiTaxon" preferably
            with a purl. The rank of this ID should be species.
          items:
            $ref: '#/components/schemas/taxonID'
        typeOfGermplasmStorageCode:
          type: array
          description: The 2 digit code representing the type of storage this germplasm
            is kept in at a genebank. (MCPD)
          items:
            type: string
    germplasmSummaryList:
      type: object
      properties:
        data:
          type: array
          description: List of germplasm associated with a given trial and study
          items:
            $ref: '#/components/schemas/germplasmSummary'
        studyDbId:
          type: string
          description: |-
            ** Deprecated ** The request contains the studyDbId
            The ID which uniquely identifies a study within the given database server
        trialName:
          type: string
          description: "** Deprecated ** trialName not relevent \nThe human readable\
            \ name of a trial"
    image:
      type: object
      properties:
        additionalInfo:
          type: object
          additionalProperties:
            type: string
        copyright:
          type: string
          description: The copyright information of this image. Example 'Copyright
            2018 Bob Robertson'
        description:
          type: string
          description: The human readable description of an image.
        descriptiveOntologyTerms:
          type: array
          description: A list of terms to formally describe the image. Each item could
            be a simple Tag, an Ontology reference Id, or a full ontology URL.
          items:
            type: string
        imageDbId:
          type: string
          description: The unique identifier of an image
        imageFileName:
          type: string
          description: The name of the image file. Might be the same as 'imageName',
            but could be different.
        imageFileSize:
          type: integer
          description: The size of the image in Bytes.
        imageHeight:
          type: integer
          description: The height of the image in Pixels.
        imageLocation:
          $ref: '#/components/schemas/geoJSON'
        imageName:
          type: string
          description: The human readable name of an image. Might be the same as 'imageFileName',
            but could be different.
        imageTimeStamp:
          type: string
          description: The date and time the image was taken
          format: date
        imageURL:
          type: string
          description: The complete, absolute URI path to the image file. Images might
            be stored on a different host or path than the BrAPI web server.
        imageWidth:
          type: integer
          description: The width of the image in Pixels.
        mimeType:
          pattern: image/.*
          type: string
          description: The file type of the image. Examples 'image/jpeg', 'image/png',
            'image/svg', etc
        observationDbIds:
          type: array
          description: A list of observation Ids this image is associated with, if
            applicable.
          items:
            type: string
        observationUnitDbId:
          type: string
          description: The related observation unit identifier, if relevent.
    imagesSearchRequest:
      type: object
      properties:
        descriptiveOntologyTerms:
          type: array
          description: A list of terms to formally describe the image to search for.
            Each item could be a simple Tag, an Ontology reference Id, or a full ontology
            URL.
          items:
            type: string
        imageFileNames:
          type: array
          description: Image file names to search for.
          items:
            type: string
        imageFileSizeMax:
          type: integer
          description: A maximum image file size to search for.
        imageFileSizeMin:
          type: integer
          description: A minimum image file size to search for.
        imageHeightMax:
          type: integer
          description: A maximum image height to search for.
        imageHeightMin:
          type: integer
          description: A minimum image height to search for.
        imageLocation:
          $ref: '#/components/schemas/geoJSON'
        imageNames:
          type: array
          description: Human readable names to search for.
          items:
            type: string
        imageTimeStampRangeEnd:
          type: string
          description: The latest timestamp to search for.
          format: date
        imageTimeStampRangeStart:
          type: string
          description: The earliest timestamp to search for.
          format: date
        imageWidthMax:
          type: integer
          description: A maximum image width to search for.
        imageWidthMin:
          type: integer
          description: A minimum image width to search for.
        mimeTypes:
          type: array
          description: A set of image file types to search for.
          items:
            pattern: image/.*
            type: string
        observationDbIds:
          type: array
          description: A list of observation Ids this image is associated with to
            search for
          items:
            type: string
        observationUnitDbIds:
          type: array
          description: A set of observation unit identifiers to search for.
          items:
            type: string
    linearRing:
      minItems: 4
      type: array
      description: An array of at least four positions where the first equals the
        last
      items:
        $ref: '#/components/schemas/position'
    linkageGroup:
      type: object
      properties:
        linkageGroupName:
          type: string
          description: The Uniquely Identifiable name of this linkage group
        markerCount:
          type: integer
          description: The number of markers associated with this linkage group
        maxPosition:
          type: integer
          description: The maximum position of a marker within this linkage group
    listDetails:
      allOf:
      - $ref: '#/components/schemas/listSummary'
      - type: object
        properties:
          data:
            type: array
            items:
              type: string
    listSummary:
      required:
      - listDbId
      - listType
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        description:
          type: string
        listDbId:
          type: string
        listName:
          type: string
        listOwnerName:
          type: string
        listOwnerPersonDbId:
          type: string
        listSize:
          type: integer
        listSource:
          type: string
        listType:
          $ref: '#/components/schemas/listTypes'
    listTypes:
      type: string
      enum:
      - germplasm
      - markers
      - programs
      - trials
      - studies
      - observationUnits
      - observations
      - observationVariables
      - samples
    location:
      type: object
      properties:
        abbreviation:
          type: string
          description: An abbreviation which represents this location
        abreviation:
          type: string
          description: 'Deprecated  Use abbreviation '
        additionalInfo:
          type: object
          additionalProperties:
            type: string
          description: Additional arbitrary info
        altitude:
          type: number
          description: The altitude of this location
        countryCode:
          type: string
          description: '[ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
            spec'
        countryName:
          type: string
          description: The full name of the country where this location is
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        instituteAddress:
          type: string
          description: The street address of the institute representing this location
        instituteAdress:
          type: string
          description: 'Deprecated  Use instituteAddress '
        instituteName:
          type: string
          description: each institute/laboratory can have several experimental field
        latitude:
          type: number
          description: The latitude of this location
        locationDbId:
          type: string
          description: string identifier
        locationName:
          type: string
          description: A human readable name for this location
        locationType:
          type: string
          description: The type of location this represents (ex. Breeding Location,
            Storage Location, etc)
        longitude:
          type: number
          description: the longitude of this location
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "locationName"
          deprecated: true
    marker:
      type: object
      properties:
        analysisMethods:
          type: array
          description: List of the genotyping platforms used to interrogate the marker
          items:
            type: string
        defaultDisplayName:
          type: string
          description: DEPRECATED in v 1.3 - see "markerName"
          deprecated: true
        markerDbId:
          type: string
          description: Internal db identifier
        markerName:
          type: string
          description: A string representing the marker that will be meaningful to
            the user
        refAlt:
          type: array
          description: List of the reference (as the first item) and alternatives
            (the remaining items)
          items:
            type: string
        synonyms:
          type: array
          description: List of other names for this marker
          items:
            type: string
        type:
          type: string
          description: The type of marker, e.g. SNP
    markerProfile:
      required:
      - data
      - extractDbId
      - germplasmDbId
      - markerProfileDbId
      type: object
      properties:
        analysisMethod:
          type: string
          description: The type of analysis performed to determine a set of marker
            data
        data:
          type: array
          description: array of marker-name/score pairs
          items:
            type: object
            additionalProperties:
              type: string
        extractDbId:
          type: string
          description: Required
        germplasmDbId:
          type: string
          description: Required
        markerProfileDbId:
          type: string
          description: Unique in the database. Can be a catenation of unique IDs for
            germplasm and extract. Required
        markerprofileDbId:
          type: string
          description: DEPRECATED in v1.3 - see "markerProfileDbId" (camel case)
        uniqueDisplayName:
          type: string
          description: Human readable display name for this marker profile
    markerProfileDescription:
      required:
      - markerProfileDbId
      type: object
      properties:
        analysisMethod:
          type: string
          description: The type of analysis performed to determine a set of marker
            data
        extractDbId:
          type: string
          description: ' The ID which uniquely identifies this data extract'
        germplasmDbId:
          type: string
          description: ' The ID which uniquely identifies a germplasm'
        markerProfileDbId:
          type: string
          description: Unique in the database. Can be a catenation of unique IDs for
            germplasm and extract. Required
        markerprofileDbId:
          type: string
          description: DEPRECATED in v1.3 - see "markerProfileDbId" (camel case)
        resultCount:
          type: integer
          description: Number of markers present in the marker profile
        sampleDbId:
          type: string
          description: The ID which uniquely identifies a sample
        uniqueDisplayName:
          type: string
          description: Human readable display name for this marker profile
    markerResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/marker'
    markerSummaryLinkageGroup:
      type: object
      properties:
        location:
          type: string
          description: The position of a marker within a linkage group
        markerDbId:
          type: string
          description: Internal db identifier
        markerName:
          type: string
          description: The human readable name for a marker
    markerSummaryMap:
      type: object
      properties:
        linkageGroupName:
          type: string
          description: The Uniquely Identifiable name of this linkage group
        location:
          type: string
          description: The position of a marker within a linkage group
        markerDbId:
          type: string
          description: Internal db identifier
        markerName:
          type: string
          description: The human readable name for a marker
    markersResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/markersResponse_result'
    markersSearchRequest:
      type: object
      properties:
        includeSynonyms:
          type: boolean
          description: Should an array of synonyms be included in the response
        markerDbIds:
          type: array
          description: 'List of IDs which uniquely identify markers '
          items:
            type: string
        markerNames:
          type: array
          description: The search pattern for the marker name or synonym.
          items:
            type: string
        matchMethod:
          type: string
          description: How to perform string matching during search. 'exact' will
            search for exact, case sensitive matches only. 'case_insensitive' will
            search for exact matches, but case insensitive. 'wildcard' will allow
            the special characters '*' (star) and '%' (percent) to represent variable
            length arbitrary strings, and the special character '?' (question) to
            represent one arbitrary character.
          enum:
          - exact
          - case_insensitive
          - wildcard
        name:
          type: string
          description: DEPRECATED in v 1.3 - see "markerNames"
          deprecated: true
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        type:
          type: string
          description: DEPRECATED in v 1.3 - see "types"
          deprecated: true
        types:
          type: array
          description: The type of marker, e.g. SNP
          items:
            type: string
    measurement:
      type: object
      properties:
        units:
          type: string
          description: 'Units (example: "ng/ul")'
        value:
          type: number
          description: 'Value (example: "2.3")'
      description: A value with units
    metadata:
      type: object
      properties:
        datafiles:
          type: array
          description: The datafiles key contains a list of file paths, which can
            be relative or complete URLs. These files contain additional information
            related to the returned object and can be retrieved by a subsequent call.
            The empty list should be returned if no additional data files are present.
          items:
            type: string
        pagination:
          $ref: '#/components/schemas/metadata_pagination'
        status:
          type: array
          description: The status field contains a list of informational status messages
            from the server. If no status is reported, an empty list should be returned.
            See Error Reporting for more information.
          items:
            $ref: '#/components/schemas/status'
    method:
      type: object
      properties:
        class:
          title: className
          type: string
          description: 'Method class (examples: "Measurement", "Counting", "Estimation",
            "Computation", etc.'
        description:
          type: string
          description: Method description.
        formula:
          type: string
          description: For computational methods i.e., when the method consists in
            assessing the trait by computing measurements, write the generic formula
            used for the calculation
        methodDbId:
          type: string
          description: Method unique identifier
        methodName:
          type: string
          description: Human readable name for the method
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "methodName"
          deprecated: true
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        reference:
          type: string
          description: Bibliographical reference describing the method.
      description: Method metadata
    newImageRequest:
      type: object
      properties:
        additionalInfo:
          type: object
          additionalProperties:
            type: string
        copyright:
          type: string
          description: The copyright information of this image. Example 'Copyright
            2018 Bob Robertson'
        description:
          type: string
          description: The human readable description of an image.
        descriptiveOntologyTerms:
          type: array
          description: A list of terms to formally describe the image. Each item could
            be a simple Tag, an Ontology reference Id, or a full ontology URL.
          items:
            type: string
        imageFileName:
          type: string
          description: The name of the image file. Might be the same as 'imageName',
            but could be different.
        imageFileSize:
          type: integer
          description: The size of the image in Bytes.
        imageHeight:
          type: integer
          description: The height of the image in Pixels.
        imageLocation:
          $ref: '#/components/schemas/geoJSON'
        imageName:
          type: string
          description: The human readable name of an image. Might be the same as 'imageFileName',
            but could be different.
        imageTimeStamp:
          type: string
          description: The date and time the image was taken
          format: date
        imageWidth:
          type: integer
          description: The width of the image in Pixels.
        mimeType:
          pattern: image/.*
          type: string
          description: The file type of the image. Examples 'image/jpeg', 'image/png',
            'image/svg', etc
        observationDbIds:
          type: array
          description: A list of observation Ids this image is associated with, if
            applicable.
          items:
            type: string
        observationUnitDbId:
          type: string
          description: The related observation unit identifier, if relevent.
    newListRequest:
      required:
      - listType
      type: object
      properties:
        data:
          type: array
          items:
            type: string
        description:
          type: string
        listName:
          type: string
        listOwnerName:
          type: string
        listOwnerPersonDbId:
          type: string
        listSize:
          type: integer
        listSource:
          type: string
        listType:
          $ref: '#/components/schemas/listTypes'
    newMethodRequest:
      type: object
      properties:
        class:
          title: className
          type: string
          description: 'Method class (examples: "Measurement", "Counting", "Estimation",
            "Computation", etc.)'
        description:
          type: string
          description: Method description.
        formula:
          type: string
          description: For computational methods i.e., when the method consists in
            assessing the trait by computing measurements, write the generic formula
            used for the calculation
        methodName:
          type: string
          description: Human readable name for the method
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        reference:
          type: string
          description: Bibliographical reference describing the method.
      description: new Method request
    newObservationDbIds:
      type: object
      properties:
        observations:
          type: array
          description: List of observation references which have been created or updated
          items:
            $ref: '#/components/schemas/newObservationDbIds_observations'
    newObservationUnitDbIds:
      type: object
      properties:
        observationUnitDbIds:
          type: array
          description: List of observation unit references which have been created
            or updated
          items:
            type: string
    newObservationUnitRequest:
      type: object
      properties:
        X:
          title: xCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateX"
          deprecated: true
        Y:
          title: yCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateY"
          deprecated: true
        blockNumber:
          type: string
          description: The block number for an observation unit. Different systems
            may use different block designs.
        entryNumber:
          type: string
          description: The entry number for an observation unit. Different systems
            may use different entry systems.
        entryType:
          type: string
          description: The type of entry for this observation unit. ex. "check", "test",
            "filler"
        germplasmDbId:
          type: string
          description: ' The ID which uniquely identifies a germplasm'
        observationLevel:
          type: string
          description: The level of an observation unit. ex. "plot", "plant"
        observationUnitDbId:
          type: string
          description: The ID which uniquely identifies an observation unit
        observationUnitName:
          type: string
          description: A human readable name for an observation unit
        observationUnitXref:
          type: array
          description: A list of external references to this observation unit
          items:
            $ref: '#/components/schemas/observationUnitXref'
        observations:
          type: array
          description: List of observations associated with this observation unit
          items:
            $ref: '#/components/schemas/observation'
        plantNumber:
          type: string
          description: 'The plant number in a field. Applicable for observationLevel:
            "plant"'
        plotNumber:
          type: string
          description: 'The plot number in a field. Applicable for observationLevel:
            "plot"'
        positionCoordinateX:
          type: string
          description: The X position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateXType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        positionCoordinateY:
          type: string
          description: The Y position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateYType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        replicate:
          type: string
          description: The replicate number of an observation unit. May be the same
            as blockNumber.
        studyDbId:
          type: string
          description: The ID which uniquely identifies a study within the given database
            server
        treatments:
          type: array
          description: List of treatments applied to an observation unit.
          items:
            $ref: '#/components/schemas/observationTreatment'
    newObservationsRequest:
      type: object
      properties:
        observations:
          type: array
          description: List of observation references to be created or updated
          items:
            $ref: '#/components/schemas/newObservationsRequest_observations'
    newObservationsRequestDeprecated:
      type: object
      properties:
        commit:
          type: string
          description: Should these changes be commited
        data:
          type: array
          description: |-
            Required
            array of marker-name/score pairs
          items:
            $ref: '#/components/schemas/newObservationsRequestDeprecated_data'
        transactionDbId:
          type: string
          description: The ID representing this transaction
    newObservationsTableRequest:
      type: object
      properties:
        data:
          type: array
          description: Matrix of observation data recorded for different observation
            variables across different observation units
          items:
            type: array
            items:
              type: string
        headerRow:
          type: array
          description: The header row describing the data matrix. Append 'observationVariableDbIds'
            for complete header row.
          items:
            type: string
        metadata:
          properties:
            datafiles:
              type: array
              items:
                type: string
            pagination:
              type: object
              properties:
                currentPage:
                  type: integer
                pageSize:
                  type: integer
                totalCount:
                  type: integer
                totalPages:
                  type: integer
            status:
              type: array
              items:
                $ref: '#/components/schemas/status'
          description: DEPRECATED
          deprecated: true
        observationVariableDbIds:
          type: array
          description: The list of observation variables which have values recorded
            for them in the data matrix. Append to the 'headerRow' for comlete header
            row.
          items:
            type: string
        result:
          $ref: '#/components/schemas/newObservationsTableRequest_result'
    newPersonRequest:
      type: object
      properties:
        description:
          type: string
          description: description of this person
        emailAddress:
          type: string
          description: email address for this person
        firstName:
          type: string
          description: Persons first name
        lastName:
          type: string
          description: Persons last name
        mailingAddress:
          type: string
          description: physical address of this person
        middleName:
          type: string
          description: Persons middle name
        phoneNumber:
          type: string
          description: phone number of this person
        userID:
          type: string
          description: A systems user ID ascociated with this person. Different from
            personDbId because you could have a person who is not a user of the system.
    newSampleDbId:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/newSampleDbId_result'
    newScaleRequest:
      type: object
      properties:
        dataType:
          $ref: '#/components/schemas/traitDataType'
        decimalPlaces:
          type: integer
          description: For numerical, number of decimal places to be reported
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        scaleName:
          type: string
          description: Name of the scale
        validValues:
          $ref: '#/components/schemas/validValues'
        xref:
          type: string
          description: Cross reference to the scale, for example to a unit ontology
            such as UO or to a unit of an external major database
      description: New scale request object
    newTraitRequest:
      type: object
      properties:
        alternativeAbbreviations:
          type: array
          description: Other frequent abbreviations of the trait, if any. These abbreviations
            do not have to follow a convention
          items:
            type: string
        attribute:
          type: string
          description: A trait can be decomposed as "Trait" = "Entity" + "Attribute",
            the attribute is the observed feature (or characteristic) of the entity
            e.g., for "grain colour", attribute = "colour"
        class:
          title: className
          type: string
          description: 'Trait class. (examples: "morphological trait", "phenological
            trait", "agronomical trait", "physiological trait", "abiotic stress trait",
            "biotic stress trait", "biochemical trait", "quality traits trait", "fertility
            trait", etc.)'
        description:
          type: string
          description: The description of a trait
        entity:
          type: string
          description: A trait can be decomposed as "Trait" = "Entity" + "Attribute",
            the entity is the part of the plant that the trait refers to e.g., for
            "grain colour", entity = "grain"
        mainAbbreviation:
          type: string
          description: 'Main abbreviation for trait name. (examples: "Carotenoid content"
            => "CC")'
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        status:
          type: string
          description: 'Trait status (examples: "recommended", "obsolete", "legacy",
            etc.)'
        synonyms:
          type: array
          description: Other trait names
          items:
            type: string
        traitName:
          type: string
          description: The human readable name of a trait
        xref:
          type: string
          description: Cross reference of the trait to an external ontology or database
            term e.g., Xref to a trait ontology (TO) term
    observation:
      type: object
      properties:
        germplasmDbId:
          type: string
          description: ' The ID which uniquely identifies a germplasm'
        germplasmName:
          type: string
          description: Name of the germplasm. It can be the prefered name and does
            not have to be unique.
        observationDbId:
          type: string
          description: The ID which uniquely identifies an observation
        observationLevel:
          type: string
          description: The level of an observation unit. ex. "plot", "plant"
        observationTimeStamp:
          type: string
          description: 'The date and time  when this observation was made '
          format: date-time
        observationUnitDbId:
          type: string
          description: The ID which uniquely identifies an observation unit
        observationUnitName:
          type: string
          description: A human readable name for an observation unit
        observationVariableDbId:
          type: string
          description: The ID which uniquely identifies an observation variable
        observationVariableName:
          type: string
          description: A human readable name for an observation variable
        operator:
          type: string
          description: The name or identifier of the entity which collected the observation
        season:
          $ref: '#/components/schemas/season'
        studyDbId:
          type: string
          description: The ID which uniquely identifies a study within the given database
            server
        uploadedBy:
          type: string
          description: The name or id of the user who uploaded the observation to
            the database system
        value:
          type: string
          description: The value of the data collected as an observation
    observationSummary:
      type: object
      properties:
        collector:
          type: string
          description: The name or identifier of the entity which collected the observation
        observationDbId:
          type: string
          description: The ID which uniquely identifies an observation
        observationTimeStamp:
          type: string
          description: 'The date and time  when this observation was made '
          format: date-time
        observationVariableDbId:
          type: string
          description: The ID which uniquely identifies an observation variable
        observationVariableName:
          type: string
          description: A human readable name for an observation variable
        season:
          $ref: '#/components/schemas/season'
        value:
          type: string
          description: The value of the data collected as an observation
    observationSummaryPhenotype:
      type: object
      properties:
        collector:
          type: string
          description: The name or identifier of the entity which collected the observation
        observationDbId:
          type: string
          description: The ID which uniquely identifies an observation
        observationTimeStamp:
          type: string
          description: 'The date and time  when this observation was made '
          format: date-time
        observationVariableDbId:
          type: string
          description: The ID which uniquely identifies an observation variable
        observationVariableName:
          type: string
          description: A human readable name for an observation variable
        season:
          type: string
          description: The season when the observation data was collected
        value:
          type: string
          description: The value of the data collected as an observation
    observationTreatment:
      type: object
      properties:
        factor:
          type: string
          description: The type of treatment/factor. ex. 'fertilizer', 'inoculation',
            'irrigation', etc
        modality:
          type: string
          description: The treatment/factor descritpion. ex. 'low fertilizer', 'yellow
            rust inoculation', 'high water', etc
    observationUnit:
      type: object
      properties:
        X:
          title: xCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateX"
          deprecated: true
        Y:
          title: yCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateY"
          deprecated: true
        blockNumber:
          type: string
          description: The block number for an observation unit. Different systems
            may use different block designs.
        entryNumber:
          type: string
          description: The entry number for an observation unit. Different systems
            may use different entry systems.
        entryType:
          type: string
          description: The type of entry for this observation unit. ex. "check", "test",
            "filler"
        germplasmDbId:
          type: string
          description: ' The ID which uniquely identifies a germplasm'
        germplasmName:
          type: string
          description: Name of the germplasm. It can be the prefered name and does
            not have to be unique.
        locationDbId:
          type: string
          description: The ID which uniquely identifies a location, associated with
            this study
        locationName:
          type: string
          description: The human readable name of a location associated with this
            study
        observationLevel:
          type: string
          description: The level of an observation unit. ex. "plot", "plant"
        observationLevels:
          type: string
          description: Concatenation of the levels of this observationUnit. Used to
            handle non canonical level structures. Format levelType:levelID,levelType:levelID
        observationUnitDbId:
          type: string
          description: The ID which uniquely identifies an observation unit
        observationUnitName:
          type: string
          description: A human readable name for an observation unit
        observationUnitXref:
          type: array
          description: A list of external references to this observation unit
          items:
            $ref: '#/components/schemas/observationUnitXref'
        observations:
          type: array
          description: List of observations associated with this observation unit
          items:
            $ref: '#/components/schemas/observationSummary'
        pedigree:
          type: string
          description: The string representation of the pedigree of this observation
            unit
        plantNumber:
          type: string
          description: 'The plant number in a field. Applicable for observationLevel:
            "plant"'
        plotNumber:
          type: string
          description: 'The plot number in a field. Applicable for observationLevel:
            "plot"'
        positionCoordinateX:
          type: string
          description: The X position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateXType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        positionCoordinateY:
          type: string
          description: The Y position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateYType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        programDbId:
          type: string
          description: The ID which uniquely identifies a program
        programName:
          type: string
          description: The human readable name of a program
        replicate:
          type: string
          description: The replicate number of an observation unit. May be the same
            as blockNumber.
        studyDbId:
          type: string
          description: The ID which uniquely identifies a study within the given database
            server
        studyLocation:
          type: string
          description: DEPRECATED in v1.3 - see "locationName"
          deprecated: true
        studyLocationDbId:
          type: string
          description: DEPRECATED in v1.3 - see "locationDbId"
          deprecated: true
        studyName:
          type: string
          description: The human readable name for a study
        treatments:
          type: array
          description: List of treatments applied to an observation unit.
          items:
            $ref: '#/components/schemas/observationTreatment'
        trialDbId:
          type: string
          description: The ID which uniquely identifies a trial
        trialName:
          type: string
          description: The human readable name of a trial
    observationUnitPhenotype:
      type: object
      properties:
        X:
          title: xCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateX"
          deprecated: true
        Y:
          title: yCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateY"
          deprecated: true
        blockNumber:
          type: string
          description: The block number for an observation unit. Different systems
            may use different block designs.
        entryNumber:
          type: string
          description: The entry number for an observation unit. Different systems
            may use different entry systems.
        entryType:
          type: string
          description: The type of entry for this observation unit. ex. "check", "test",
            "filler"
        germplasmDbId:
          type: string
          description: ' The ID which uniquely identifies a germplasm'
        germplasmName:
          type: string
          description: Name of the germplasm. It can be the prefered name and does
            not have to be unique.
        observationLevel:
          type: string
          description: The level of an observation unit. ex. "plot", "plant"
        observationLevels:
          type: string
          description: Concatenation of the levels of this observationUnit. Used to
            handle non canonical level structures. Format levelType:levelID,levelType:levelID
        observationUnitDbId:
          type: string
          description: The ID which uniquely identifies an observation unit
        observationUnitName:
          type: string
          description: A human readable name for an observation unit
        observationUnitXref:
          type: array
          description: A list of external references to this observation unit
          items:
            $ref: '#/components/schemas/observationUnitXref'
        observations:
          type: array
          description: List of observations associated with this observation unit
          items:
            $ref: '#/components/schemas/observationSummaryPhenotype'
        plantNumber:
          type: string
          description: 'The plant number in a field. Applicable for observationLevel:
            "plant"'
        plotNumber:
          type: string
          description: 'The plot number in a field. Applicable for observationLevel:
            "plot"'
        positionCoordinateX:
          type: string
          description: The X position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateXType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        positionCoordinateY:
          type: string
          description: The Y position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateYType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        programName:
          type: string
          description: The human readable name of a program
        replicate:
          type: string
          description: The replicate number of an observation unit. May be the same
            as blockNumber.
        studyDbId:
          type: string
          description: The ID which uniquely identifies a study within the given database
            server
        studyLocation:
          type: string
          description: The human readable name of a location associated with this
            study
        studyLocationDbId:
          type: string
          description: The ID which uniquely identifies a location, associated with
            this study
        studyName:
          type: string
          description: The human readable name for a study
        treatments:
          type: array
          description: List of treatments applied to an observation unit.
          items:
            $ref: '#/components/schemas/observationTreatment'
    observationUnitPosition:
      type: object
      properties:
        X:
          title: xCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateX"
          deprecated: true
        Y:
          title: yCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateY"
          deprecated: true
        additionalInfo:
          type: object
          additionalProperties:
            type: string
          description: Additional arbitrary info
        blockNumber:
          type: string
          description: The block number for an observation unit. Different systems
            may use different block designs.
        entryType:
          type: string
          description: The type of entry for this observation unit. ex. "check", "test",
            "filler"
          enum:
          - CHECK
          - TEST
          - FILLER
        germplasmDbId:
          type: string
          description: ' The ID which uniquely identifies a germplasm'
        germplasmName:
          type: string
          description: Name of the germplasm. It can be the prefered name and does
            not have to be unique.
        observationLevel:
          type: string
          description: The level of an observation unit. ex. "plot", "plant"
        observationUnitDbId:
          type: string
          description: The ID which uniquely identifies an observation unit
        observationUnitName:
          type: string
          description: A human readable name for an observation unit
        positionCoordinateX:
          type: string
          description: The X position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateXType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        positionCoordinateY:
          type: string
          description: The Y position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateYType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        replicate:
          type: string
          description: The replicate number of an observation unit. May be the same
            as blockNumber.
        studyDbId:
          type: string
          description: The ID which uniquely identifies a study within the given database
            server
    observationUnitXref:
      type: object
      properties:
        id:
          type: string
          description: The unique ID in the external reference 'source' system
        source:
          type: string
          description: The system identifier (name, URL, etc) which has an external
            reference to the observation unit
    observationUnitsTableResponse:
      type: object
      properties:
        data:
          type: array
          description: Matrix of observation meta-data and recorded values. Each inner
            array represents 1 row of data.
          items:
            type: array
            items:
              type: string
        headerRow:
          type: array
          description: Names of the columns included in the data matrix. Any or All
            of [ "year","studyDbId","studyName","locationDbId","locationName","germplasmDbId","germplasmName","observationUnitDbId","plotNumber","replicate","blockNumber",
            "entryType", "X", "Y"]
          items:
            type: string
        observationVariableDbIds:
          type: array
          description: Array of observation variable DbIds for the collected data.
            This array is appended to the "headerRow" to get the complete header of
            the data matrix
          items:
            type: string
        observationVariableNames:
          type: array
          description: Human readable names of the observation variables for the collected
            data. This array should match 1 to 1 with the "observationVariableDbIds"
            array.
          items:
            type: string
    observationVariable:
      allOf:
      - $ref: '#/components/schemas/VariableBaseClass'
      - required:
        - observationVariableDbId
        - observationVariableName
        type: object
        properties:
          date:
            type: string
            description: DEPRECATED in v1.3 - see "submissionTimestamp"
            deprecated: true
          name:
            type: string
            description: DEPRECATED in v1.3 - Use "observationVariableName"
            deprecated: true
          observationVariableDbId:
            type: string
            description: Variable unique identifier
          observationVariableName:
            type: string
            description: Variable name (usually a short name)
    observationVariableSearchRequest:
      type: object
      properties:
        dataTypes:
          type: array
          description: List of scale data types to filter search results
          items:
            $ref: '#/components/schemas/traitDataType'
        methodDbIds:
          type: array
          description: List of methods to filter search results
          items:
            type: string
        observationVariableDbIds:
          type: array
          description: List of observation variable IDs to search for
          items:
            type: string
        observationVariableNames:
          type: array
          description: List of human readable observation variable names to search
            for
          items:
            type: string
        observationVariableXrefs:
          type: array
          description: List of cross references for the observation variable to search
            for
          items:
            type: string
        ontologyDbIds:
          type: array
          description: List of ontology IDs to search for
          items:
            type: string
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        scaleDbIds:
          type: array
          description: List of scales to filter search results
          items:
            type: string
        scaleXrefs:
          type: array
          description: List of cross references for the scale to search for
          items:
            type: string
        traitClasses:
          type: array
          description: List of trait classes to filter search results
          items:
            type: string
        traitDbIds:
          type: array
          description: List of trait unique ID to filter search results
          items:
            type: string
        traitXrefs:
          type: array
          description: List of cross references for the trait to search for
          items:
            type: string
    observationVariableSearchRequest_Dep:
      type: object
      properties:
        datatypes:
          type: array
          description: List of scale data types to filter search results
          items:
            $ref: '#/components/schemas/traitDataType'
        methodDbIds:
          type: array
          description: List of methods to filter search results
          items:
            type: string
        names:
          type: array
          description: List of human readable observation variable names to search
            for
          items:
            type: string
        observationVariableDbIds:
          type: array
          description: List of observation variable IDs to search for
          items:
            type: string
        ontologyDbIds:
          type: array
          description: List of ontology IDs to search for
          items:
            type: string
        ontologyXrefs:
          type: array
          description: List of cross reference values to search for
          items:
            type: string
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        scaleDbIds:
          type: array
          description: List of scales to filter search results
          items:
            type: string
        traitClasses:
          type: array
          description: List of trait classes to filter search results
          items:
            type: string
    observationsTable:
      type: object
      properties:
        data:
          type: array
          description: Matrix of observation data recorded for different observation
            variables across different observation units
          items:
            type: array
            items:
              type: string
        headerRow:
          type: array
          description: |-
            The header row describing observation unit fields. Append 'observationVariableDbIds' for complete header row of the table.
            This array should contain any or all of the following strings; year, studyDbId, studyName, locationDbId, locationName, germplasmDbId, germplasmName, observationUnitDbId, plotNumber, replicate, blockNumber, observationTimestamp (DEPRECATED in V1.3), entryType, X, Y
          items:
            type: string
            description: valid header fields
            enum:
            - year
            - studyDbId
            - studyName
            - locationDbId
            - locationName
            - germplasmDbId
            - germplasmName
            - observationUnitDbId
            - plotNumber
            - replicate
            - blockNumber
            - observationTimestamp
            - entryType
            - X
            - Y
        observationVariableDbIds:
          type: array
          description: The list of observation variables which have values recorded
            for them in the data matrix. Append to the 'headerRow' for comlete header
            row.
          items:
            type: string
        observationVariableNames:
          type: array
          description: The list of observation variable names which have values recorded
            for them in the data matrix. Order should match 'observationVariableDbIds'.
          items:
            type: string
    ontology:
      required:
      - ontologyDbId
      - ontologyName
      type: object
      properties:
        authors:
          type: string
          description: Ontology's list of authors (no specific format)
        copyright:
          type: string
          description: Ontology copyright
        description:
          type: string
          description: Human readable description of Ontology
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        licence:
          type: string
          description: Ontology licence
        ontologyDbId:
          type: string
          description: Ontology database unique identifier
        ontologyName:
          type: string
          description: Ontology name
        version:
          type: string
          description: Ontology version (no specific format)
    ontologyReference:
      required:
      - ontologyName
      type: object
      properties:
        documentationLinks:
          type: array
          description: links to various ontology documentation
          items:
            $ref: '#/components/schemas/ontologyReference_documentationLinks'
        ontologyDbId:
          type: string
          description: Ontology database unique identifier
        ontologyName:
          type: string
          description: Ontology name
        version:
          type: string
          description: Ontology version (no specific format)
    pedigree:
      type: object
      properties:
        crossingPlan:
          type: string
          description: The crossing strategy used to generate this germplasm
        crossingYear:
          type: string
          description: The year the parents were originally crossed
        defaultDisplayName:
          type: string
          description: A human readable name for a germplasm
        familyCode:
          type: string
          description: The code representing the family
        germplasmDbId:
          type: string
          description: ' The ID which uniquely identifies a germplasm'
        parent1DbId:
          type: string
          description: The germplasm DbId of the first parent of this germplasm
        parent1Id:
          type: string
          description: '**Deprecated** use parent1DbId'
        parent1Name:
          type: string
          description: the human readable name of the first parent of this germplasm
        parent1Type:
          type: string
          description: The type of parent the first parent is. ex. 'MALE', 'FEMALE',
            'SELF', 'POPULATION', etc.
          enum:
          - MALE
          - FEMALE
          - SELF
          - POPULATION
        parent2DbId:
          type: string
          description: The germplasm DbId of the second parent of this germplasm
        parent2Id:
          type: string
          description: '**Deprecated** use parent2DbId'
        parent2Name:
          type: string
          description: The human readable name of the second parent of this germplasm
        parent2Type:
          type: string
          description: The type of parent the second parent is. ex. 'MALE', 'FEMALE',
            'SELF', 'POPULATION', etc.
          enum:
          - MALE
          - FEMALE
          - SELF
          - POPULATION
        pedigree:
          type: string
          description: The string representation of the pedigree.
        siblings:
          type: array
          description: 'List of sibling germplasm '
          items:
            $ref: '#/components/schemas/pedigree_siblings'
    person:
      required:
      - personDbId
      type: object
      properties:
        description:
          type: string
          description: description of this person
        emailAddress:
          type: string
          description: email address for this person
        firstName:
          type: string
          description: Persons first name
        lastName:
          type: string
          description: Persons last name
        mailingAddress:
          type: string
          description: physical address of this person
        middleName:
          type: string
          description: Persons middle name
        personDbId:
          type: string
          description: Unique ID for this person
        phoneNumber:
          type: string
          description: phone number of this person
        userID:
          type: string
          description: A systems user ID ascociated with this person. Different from
            personDbId because you could have a person who is not a user of the system.
    phenotypesRequest:
      type: object
      properties:
        data:
          type: array
          description: Matrix of observation data recorded for different observation
            variables across different observation units
          items:
            $ref: '#/components/schemas/phenotypesRequest_data'
    phenotypesRequestObservation:
      required:
      - collector
      - observationTimeStamp
      - observationVariableDbId
      - observationVariableName
      - value
      type: object
      properties:
        collector:
          type: string
          description: The name or identifier of the entity which collected the observation
        observationDbId:
          type: string
          description: The ID which uniquely identifies an observation
        observationTimeStamp:
          type: string
          description: 'The date and time  when this observation was made '
          format: date-time
        observationVariableDbId:
          type: string
          description: Variable unique identifier
        observationVariableName:
          type: string
          description: A human readable name for an observation variable
        season:
          type: string
          description: The season when the observation data was collected
        value:
          type: string
          description: The value of the data collected as an observation
    phenotypesSearchRequest:
      type: object
      properties:
        germplasmDbIds:
          type: array
          description: The name or synonym of external genebank accession identifiers
          items:
            type: string
        locationDbIds:
          type: array
          description: locations these traits were collected
          items:
            type: string
        observationLevel:
          type: string
          description: The type of the observationUnit. Returns only the observation
            unit of the specified type; the parent levels ID can be accessed through
            observationUnit Structure.
        observationTimeStampRangeEnd:
          type: string
          description: Timestamp range end
          format: date-time
        observationTimeStampRangeStart:
          type: string
          description: Timestamp range start
          format: date-time
        observationVariableDbIds:
          type: array
          description: The IDs of traits, could be ontology ID, database ID or PUI
          items:
            type: string
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        programDbIds:
          type: array
          description: list of programs to search across
          items:
            type: string
        seasonDbIds:
          type: array
          description: The year or Phenotyping campaign of a multi-annual study (trees,
            grape, ...)
          items:
            type: string
        studyDbIds:
          type: array
          description: The database ID / PK of the studies search parameter
          items:
            type: string
        trialDbIds:
          type: array
          description: list of trials to search across
          items:
            type: string
    plateFormat:
      type: string
      description: Enum for plate formats, usually "PLATE_96" for a 96 well plate
        or "TUBES" for plateless format
      enum:
      - PLATE_96
      - TUBES
    polygon:
      type: array
      description: An array of linear rings
      items:
        $ref: '#/components/schemas/linearRing'
    position:
      minItems: 2
      type: array
      description: A single position
      items:
        type: number
    progeny:
      type: object
      properties:
        defaultDisplayName:
          type: string
          description: A human readable name for a germplasm
        germplasmDbId:
          type: string
          description: The ID which uniquely identifies a germplasm
        progeny:
          type: array
          description: List of germplasm entities which are direct children of this
            germplasm
          items:
            $ref: '#/components/schemas/progeny_progeny'
    program:
      type: object
      properties:
        abbreviation:
          type: string
          description: An abbreviation which represnts this program
        commonCropName:
          type: string
          description: Common name for the crop which this program is for
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        leadPerson:
          type: string
          description: DEPRECATED in v1.3 - see "leadPersonName" or "leadPersonDbId"
          deprecated: true
        leadPersonDbId:
          type: string
          description: The unique identifier of the program leader
        leadPersonName:
          type: string
          description: The name of the program leader
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "programName"
          deprecated: true
        objective:
          type: string
          description: The primary objective of the program
        programDbId:
          type: string
          description: The ID which uniquely identifies the program
        programName:
          type: string
          description: Human readable name of the program
    programsSearchRequest:
      type: object
      properties:
        abbreviations:
          type: array
          description: An abbreviation of a program to search for
          items:
            type: string
        commonCropNames:
          type: array
          description: Common name for the crop which this program is for
          items:
            type: string
        leadPersonDbIds:
          type: array
          description: The person DbIds of the program leader to search for
          items:
            type: string
        leadPersonNames:
          type: array
          description: The names of the program leader to search for
          items:
            type: string
        objectives:
          type: array
          description: A program objective to search for
          items:
            type: string
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        programDbIds:
          type: array
          description: A program identifier to search for
          items:
            type: string
        programNames:
          type: array
          description: A name of a program to search for
          items:
            type: string
    programsSearchRequest_Deprecated:
      type: object
      properties:
        abbreviation:
          type: string
          description: An abbreviation of a program to search for
        leadPerson:
          type: string
          description: The name or identifier of the program leader to search for
        name:
          type: string
          description: A name of a program to search for
        objective:
          type: string
          description: A program objective to search for
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        programDbId:
          type: string
          description: A program identifier to search for
    sample:
      type: object
      properties:
        germplasmDbId:
          type: string
          description: ' The ID which uniquely identifies a germplasm'
        notes:
          type: string
          description: Additional notes about a samle
        observationUnitDbId:
          type: string
          description: The ID which uniquely identifies an observation unit
        plantDbId:
          type: string
          description: The ID which uniquely identifies a plant. Usually 'plantNumber'
        plateDbId:
          type: string
          description: The ID which uniquely identifies a plate of samples
        plateIndex:
          type: integer
          description: The index number of this sample on a plate
        plotDbId:
          type: string
          description: ' The ID which uniquely identifies a plot. Usually ''plotNumber'''
        sampleDbId:
          type: string
          description: The ID which uniquely identifies a sample
        sampleTimestamp:
          type: string
          description: The date and time a sample was collected from the field
          format: date-time
        sampleType:
          type: string
          description: 'The type of sample taken. ex. ''DNA'', ''RNA'', ''Tissue'',
            etc '
        studyDbId:
          type: string
          description: The ID which uniquely identifies a study within the given database
            server
        takenBy:
          type: string
          description: The name or identifier of the entity which took the sample
            from the field
        tissueType:
          type: string
          description: The type of tissue sampled. ex. 'Leaf', 'Root', etc.
    sampleSearchRequest:
      type: object
      properties:
        germplasmDbIds:
          type: array
          description: ' The ID which uniquely identifies a germplasm'
          items:
            type: string
        observationUnitDbIds:
          type: array
          description: The ID which uniquely identifies an observation unit
          items:
            type: string
        page:
          type: integer
          description: Which result page is requested. The page indexing starts at
            0 (the first page is 'page'= 0). Default is 0.
        pageSize:
          type: integer
          description: The size of the pages to be returned. Default is 1000.
        plateDbIds:
          type: array
          description: The ID which uniquely identifies a plate of samples
          items:
            type: string
        sampleDbIds:
          type: array
          description: The ID which uniquely identifies a sample
          items:
            type: string
    sampleSearchRequest_Dep:
      type: object
      properties:
        germplasmDbId:
          type: array
          description: ' The ID which uniquely identifies a germplasm'
          items:
            type: string
        observationUnitDbId:
          type: array
          description: The ID which uniquely identifies an observation unit
          items:
            type: string
        page:
          type: integer
          description: Which result page is requested. The page indexing starts at
            0 (the first page is 'page'= 0). Default is 0.
        pageSize:
          type: integer
          description: The size of the pages to be returned. Default is 1000.
        plateDbId:
          type: array
          description: The ID which uniquely identifies a plate of samples
          items:
            type: string
        sampleDbId:
          type: array
          description: The ID which uniquely identifies a sample
          items:
            type: string
    scale:
      type: object
      properties:
        dataType:
          $ref: '#/components/schemas/traitDataType'
        decimalPlaces:
          type: integer
          description: For numerical, number of decimal places to be reported
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "scaleName"
          deprecated: true
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        scaleDbId:
          type: string
          description: Unique identifier of the scale. If left blank, the upload system
            will automatically generate a scale ID.
        scaleName:
          type: string
          description: Name of the scale
        validValues:
          $ref: '#/components/schemas/validValues'
        xref:
          type: string
          description: Cross reference to the scale, for example to a unit ontology
            such as UO or to a unit of an external major database
      description: Scale metadata
    season:
      type: object
      properties:
        season:
          type: string
          description: Name of the season. ex. 'Spring', 'Q2', 'Season A', etc.
        seasonDbId:
          type: string
          description: The ID which uniquely identifies a season
        year:
          type: string
          description: The 4 digit year of the season.
    status:
      required:
      - message
      - messageType
      type: object
      properties:
        code:
          type: string
          description: DEPRECATED in v1.3 - see Error Handling best practice documentation
        message:
          type: string
          description: A short message concerning the status of this request/response
        messageType:
          type: string
          description: The logging level for the attached message
          enum:
          - DEBUG
          - ERROR
          - WARNING
          - INFO
    study:
      type: object
      properties:
        active:
          type: string
          description: Is this study currently active
        additionalInfo:
          type: object
          additionalProperties:
            type: string
          description: Additional arbitrary info
        commonCropName:
          type: string
          description: Common name for the crop associated with this study
        contacts:
          type: array
          description: List of contact entities associated with this study
          items:
            $ref: '#/components/schemas/contact'
        dataLinks:
          type: array
          description: List of links to extra data files associated with this study.
            Extra data could include notes, images, and reference data.
          items:
            $ref: '#/components/schemas/dataLink'
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        endDate:
          type: string
          description: The date the study ends
          format: date
        lastUpdate:
          $ref: '#/components/schemas/study_lastUpdate'
        license:
          type: string
          description: The usage license associated with the study data
        location:
          $ref: '#/components/schemas/location'
        seasons:
          type: array
          description: List of seasons over which this study was performed.
          items:
            type: string
        startDate:
          type: string
          description: The date this study started
          format: date
        studyDbId:
          type: string
          description: The ID which uniquely identifies a study within the given database
            server
        studyDescription:
          type: string
          description: The description of this study
        studyName:
          type: string
          description: The human readable name for a study
        studyType:
          type: string
          description: DEPRECATED in v1.3 - See "studyTypeName"
          deprecated: true
        studyTypeDbId:
          type: string
          description: The unique identifier of the type of study being performed.
        studyTypeName:
          type: string
          description: The name of the type of study being performed. ex. "Yield Trial",
            etc
        trialDbId:
          type: string
          description: The ID which uniquely identifies a trial
        trialName:
          type: string
          description: The human readable name of a trial
    studyLayoutRequest:
      type: object
      properties:
        layout:
          type: array
          description: List of observation unit position data entities which need
            to be updated
          items:
            $ref: '#/components/schemas/studyLayoutRequest_layout'
    studySearchRequest:
      type: object
      properties:
        active:
          type: boolean
          description: Is this study currently active
        commonCropNames:
          type: array
          description: Common names for the crop associated with this study
          items:
            type: string
        germplasmDbIds:
          type: array
          description: List of IDs which uniquely identify germplasm
          items:
            type: string
        locationDbIds:
          type: array
          description: List of location names to filter search results
          items:
            type: string
        observationVariableDbIds:
          type: array
          description: List of observation variable IDs to search for
          items:
            type: string
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        programDbIds:
          type: array
          description: List of program identifiers to filter search results
          items:
            type: string
        programNames:
          type: array
          description: List of program names to filter search results
          items:
            type: string
        seasonDbIds:
          type: array
          description: The ID which uniquely identifies a season
          items:
            type: string
        sortBy:
          type: string
          description: Name of one of the fields within the study object on which
            results can be sorted
          enum:
          - studyDbId
          - trialDbId
          - programDbId
          - locationDbId
          - seasonDbId
          - studyTypeName
          - studyTypeDbId
          - studyName
          - studyLocation
          - programName
          - germplasmDbId
          - observationVariableDbId
        sortOrder:
          type: string
          description: Order results should be sorted. ex. "ASC" or "DESC"
          enum:
          - ASC
          - DESC
        studyDbIds:
          type: array
          description: List of study identifiers to search for
          items:
            type: string
        studyNames:
          type: array
          description: List of study names to filter search results
          items:
            type: string
        studyTypeDbIds:
          type: array
          description: The unique identifier of the type of study being performed.
          items:
            type: string
        studyTypeNames:
          type: array
          description: The name of the type of study being performed. ex. "Yield Trial",
            etc
          items:
            type: string
        trialDbIds:
          type: array
          description: List of trial identifiers to filter search results
          items:
            type: string
    studySearchRequest_Dep:
      type: object
      properties:
        active:
          type: boolean
          description: Is this study currently active
        germplasmDbIds:
          type: array
          description: List of IDs which uniquely identify germplasm
          items:
            type: string
        locationDbIds:
          type: array
          description: List of location identifiers to filter search results
          items:
            type: string
        observationVariableDbIds:
          type: array
          description: List of observation variable IDs to search for
          items:
            type: string
        page:
          type: integer
          description: Which page of the "data" array to return. The page indexing
            starts at 0 (page=0 will return the first page). Default is 0.
        pageSize:
          type: integer
          description: The maximum number of items to return per page of the "data"
            array. Default is 1000.
        programDbIds:
          type: array
          description: List of program identifiers to filter search results
          items:
            type: string
        programNames:
          type: array
          description: List of program names to filter search results
          items:
            type: string
        seasonDbId:
          type: array
          description: The ID which uniquely identifies a season
          items:
            type: string
        sortBy:
          type: string
          description: Name of one of the fields within the study object on which
            results can be sorted
          enum:
          - studyDbId
          - trialDbId
          - programDbId
          - locationDbId
          - seasonDbId
          - studyType
          - studyName
          - studyLocation
          - programName
          - germplasmDbId
          - observationVariableDbId
        sortOrder:
          type: string
          description: Order results should be sorted. ex. "ASC" or "DESC"
          enum:
          - asc
          - desc
        studyDbIds:
          type: array
          description: List of study identifiers to search for
          items:
            type: string
        studyLocations:
          type: array
          description: List of location names to filter search results
          items:
            type: string
        studyNames:
          type: array
          description: List of study names to filter search results
          items:
            type: string
        studyType:
          type: string
          description: The type of study being performed. ex. "Yeald Trial", etc
        trialDbIds:
          type: array
          description: List of trial identifiers to filter search results
          items:
            type: string
    studySummary:
      type: object
      properties:
        active:
          type: string
          description: Is this study currently active
        additionalInfo:
          type: object
          additionalProperties:
            type: string
          description: Additional arbitrary info
        commonCropName:
          type: string
          description: Common name for the crop associated with this study
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        endDate:
          type: string
          description: The date the study ends
          format: date
        locationDbId:
          type: string
          description: The ID which uniquely identifies a location
        locationName:
          type: string
          description: The human readable name for a location
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "studyName"
          deprecated: true
        programDbId:
          type: string
          description: The ID which uniquely identifies a program within the given
            database server
        programName:
          type: string
          description: The humane readable name of a program
        seasons:
          type: array
          description: List of seasons over which this study was performed.
          items:
            $ref: '#/components/schemas/season'
        startDate:
          type: string
          description: The date this study started
          format: date
        studyDbId:
          type: string
          description: The ID which uniquely identifies a study within the given database
            server
        studyName:
          type: string
          description: The humane readable name of a study
        studyType:
          type: string
          description: DEPRECATED in v1.3 - See "studyTypeName"
          deprecated: true
        studyTypeDbId:
          type: string
          description: The unique identifier of the type of study being performed.
        studyTypeName:
          type: string
          description: The name of the type of study being performed. ex. "Yield Trial",
            etc
        trialDbId:
          type: string
          description: The ID which uniquely identifies a trial
        trialName:
          type: string
          description: The human readable name of a trial
    studyType:
      type: object
      properties:
        description:
          type: string
          description: The description of this study type
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "studyTypeName"
          deprecated: true
        studyTypeDbId:
          type: string
          description: The unique identifier of a study type
        studyTypeName:
          type: string
          description: The human readable name of a study type
    successfulSearchResponse:
      title: successfulSearchResponse
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/successfulSearchResponse_result'
    taxonID:
      required:
      - sourceName
      - taxonId
      type: object
      properties:
        sourceName:
          type: string
          description: The human readable name of the taxonomy provider
        taxonId:
          type: string
          description: The identifier (name, ID, URI) of a particular taxonomy within
            the source provider
    trait:
      type: object
      properties:
        alternativeAbbreviations:
          type: array
          description: Other frequent abbreviations of the trait, if any. These abbreviations
            do not have to follow a convention
          items:
            type: string
        attribute:
          type: string
          description: A trait can be decomposed as "Trait" = "Entity" + "Attribute",
            the attribute is the observed feature (or characteristic) of the entity
            e.g., for "grain colour", attribute = "colour"
        class:
          title: className
          type: string
          description: 'Trait class. (examples: "morphological trait", "phenological
            trait", "agronomical trait", "physiological trait", "abiotic stress trait",
            "biotic stress trait", "biochemical trait", "quality traits trait", "fertility
            trait", etc.)'
        description:
          type: string
          description: The description of a trait
        entity:
          type: string
          description: A trait can be decomposed as "Trait" = "Entity" + "Attribute",
            the entity is the part of the plant that the trait refers to e.g., for
            "grain colour", entity = "grain"
        mainAbbreviation:
          type: string
          description: 'Main abbreviation for trait name. (examples: "Carotenoid content"
            => "CC")'
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "traitName"
          deprecated: true
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        status:
          type: string
          description: 'Trait status (examples: "recommended", "obsolete", "legacy",
            etc.)'
        synonyms:
          type: array
          description: Other trait names
          items:
            type: string
        traitDbId:
          type: string
          description: The ID which uniquely identifies a trait
        traitName:
          type: string
          description: The human readable name of a trait
        xref:
          type: string
          description: Cross reference of the trait to an external ontology or database
            term e.g., Xref to a trait ontology (TO) term
    traitDataType:
      type: string
      description: "Class of the scale, entries can be \n\n  \"Code\" -  This scale\
        \ class is exceptionally used to express complex traits. Code is a nominal\n\
        \            scale that combines the expressions of the different traits composing\
        \ the complex\n            trait. For exemple a severity trait might be expressed\
        \ by a 2 digit and 2 character\n            code. The first 2 digits are the\
        \ percentage of the plant covered by a fungus and the 2\n            characters\
        \ refer to the delay in development, e.g. \"75VD\" means \"75%\" of the plant\
        \ is \n            Crop Ontology & Integrated Breeding Platform | Curation\
        \ Guidelines | 5/6/2016 9\n            infected and the plant is very delayed.\n\
        \  \n  \"Date\" - The date class is for events expressed in a time format,\
        \ e.g. yyyymmddThh:mm:ssZ or dd/mm/yy\n  \n  \"Duration\" - The Duration class\
        \ is for time elapsed between two events expressed in a time format, e.g.\
        \ days, hours, months\n  \n  \"Nominal\" - Categorical scale that can take\
        \ one of a limited and fixed number of categories. There is no intrinsic ordering\
        \ to the categories\n  \n  \"Numerical\" - Numerical scales express the trait\
        \ with real numbers. The numerical scale defines the unit e.g. centimeter,\
        \ ton per hectar, branches\n  \n  \"Ordinal\" - Ordinal scales are scales\
        \ composed of ordered categories\n  \n  \"Text\" - A free text is used to\
        \ express the trait.\n  "
      enum:
      - Code
      - Duration
      - Nominal
      - Numerical
      - Ordinal
      - Text
      - Date
    traitSummary:
      type: object
      properties:
        defaultValue:
          type: string
          description: The default value of a trait (if applicable) ex. "0", "", "null"
        description:
          type: string
          description: The description of a trait
        name:
          type: string
          description: DEPRECATED in v1.3 - Use "traitName"
          deprecated: true
        observationVariables:
          type: array
          description: List of observation variable DbIds which include this trait
          items:
            type: string
        traitDbId:
          type: string
          description: The ID which uniquely identifies a trait
        traitId:
          type: string
          description: DEPRECATED The ID which uniquely identifies a trait
          deprecated: true
        traitName:
          type: string
          description: The human readable name of a trait
    trial:
      type: object
      properties:
        active:
          type: boolean
          description: Is this trail currently active
        additionalInfo:
          type: object
          additionalProperties:
            type: string
          description: Additional arbitrary info
        commonCropName:
          type: string
          description: Common name for the crop associated with this trial
        contacts:
          type: array
          description: List of contact entities associated with this trial
          items:
            $ref: '#/components/schemas/contact'
        datasetAuthorship:
          $ref: '#/components/schemas/trial_datasetAuthorship'
        datasetAuthorships:
          type: array
          description: License and citation information for the data in this trial
          items:
            $ref: '#/components/schemas/trial_datasetAuthorships'
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        endDate:
          type: string
          description: The date this trial ends
          format: date
        programDbId:
          type: string
          description: A program identifier to search for
        programName:
          type: string
          description: The human readable name of a program
        publications:
          type: array
          items:
            $ref: '#/components/schemas/trial_publications'
        startDate:
          type: string
          description: The date this trial started
          format: date
        studies:
          type: array
          description: List of studies inside this trial
          items:
            $ref: '#/components/schemas/trial_studies'
        trialDbId:
          type: string
          description: The ID which uniquely identifies a trial
        trialName:
          type: string
          description: The human readable name of a trial
    trialSummary:
      type: object
      properties:
        active:
          type: boolean
          description: Is this trail currently active
        additionalInfo:
          type: object
          additionalProperties:
            type: string
          description: Additional arbitrary info
        commonCropName:
          type: string
          description: Common name for the crop associated with this trial
        documentationURL:
          type: string
          description: A URL to the human readable documentation of this object
          format: uri
        endDate:
          type: string
          description: The date this trial ends
          format: date
        programDbId:
          type: string
          description: The ID which uniquely identifies a program
        programName:
          type: string
          description: The human readable name of a program
        startDate:
          type: string
          description: The date this trial started
          format: date
        studies:
          type: array
          description: List of studies inside this trial
          items:
            $ref: '#/components/schemas/trial_studies'
        trialDbId:
          type: string
          description: The ID which uniquely identifies a trial
        trialName:
          type: string
          description: The human readable name of a trial
    validValues:
      type: object
      properties:
        categories:
          type: array
          description: 'List of possible values and their meaning (examples: ["0=low",
            "1=medium", "2=high"]'
          items:
            type: string
        max:
          type: integer
          description: Maximum value (used for field data capture control).
        min:
          type: integer
          description: Minimum value (used for data capture control) for numerical
            and date scales
    vendorContact:
      type: object
      properties:
        vendorAddress:
          type: string
          description: The street address of the vendor
        vendorCity:
          type: string
          description: The name of the city where the vendor is located
        vendorContactName:
          type: string
          description: The name or identifier of the primary vendor contact
        vendorCountry:
          type: string
          description: The name of the country where the vendor is located
        vendorDescription:
          type: string
          description: A description of the vendor
        vendorEmail:
          type: string
          description: The primary email address used to contact the vendor
        vendorName:
          type: string
          description: The human readable name of the vendor
        vendorPhone:
          type: string
          description: The primary phone number used to contact the vendor
        vendorURL:
          type: string
          description: The primary URL for the vendor
    vendorOntologyReference:
      type: object
      properties:
        ontologyID:
          type: string
          description: 'Ontology unique ID (example: "0025034" or "4577")'
        ontologyPrefix:
          type: string
          description: 'Ontology identifier prefix (example: "PO" or "NCBITaxon")'
        ontologyTerm:
          type: string
          description: 'Ontology term string (example: "leaf" or "Zea mays")'
      description: Ontology reference details
    vendorOrder:
      type: object
      properties:
        clientId:
          type: string
          description: A unique, alpha-numeric ID which identifies the client to the
            vendor. Used to connect the order to the correct billing and contact info.
        numberOfSamples:
          type: integer
          description: The total number of samples contained in this request. Used
            for billing and basic validation of the request.
        orderId:
          type: string
          description: The order id returned by the vendor when the order was successfully
            submitted.
        requiredServiceInfo:
          type: object
          additionalProperties:
            type: string
          description: A map of additional data required by the requested service.
            This includes things like Volume and Concentration.
        serviceId:
          type: string
          description: A unique, alpha-numeric ID which identifies the requested service
            to be used for this order. The service defines what platform, technology,
            and markers will be used. A list of service IDs can be retrieved from
            the Vendor Specs.
      description: The details of a vendor order
    vendorOrderRequest:
      type: object
      properties:
        clientId:
          type: string
          description: A unique, alpha-numeric ID which identifies the client to the
            vendor. Used to connect the order to the contract, billing, and contact
            info.
        numberOfSamples:
          type: integer
          description: The total number of samples contained in this request. Used
            for billing and basic validation of the request.
        plates:
          type: array
          description: Array of new plates to be submitted to a vendor
          items:
            $ref: '#/components/schemas/vendorOrderRequest_plates'
        requiredServiceInfo:
          type: object
          additionalProperties:
            type: string
          description: A map of additional data required by the requested service.
            This includes things like Volume and Concentration.
        sampleType:
          type: string
          description: The type of Samples being submitted
          enum:
          - DNA
          - RNA
          - Tissue
        serviceIds:
          type: array
          description: A list of unique, alpha-numeric ID which identify the requested
            services to be applied to this order. A Vendor Service defines what platform,
            technology, and markers will be used. A list of service IDs can be retrieved
            from the Vendor Specs.
          items:
            type: string
      description: Request object structure to submit plate data to a vendor
    vendorOrderResponse:
      title: vendorOrderResponse
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/vendorOrderResponse_result'
    vendorPlate:
      type: object
      properties:
        clientPlateBarcode:
          type: string
          description: (Optional) The value of the bar code attached to this plate
        clientPlateId:
          type: string
          description: The ID which uniquely identifies this plate to the client making
            the request
        sampleSubmissionFormat:
          $ref: '#/components/schemas/plateFormat'
        samples:
          type: array
          items:
            $ref: '#/components/schemas/vendorSample'
    vendorPlateGetResponse:
      type: object
      properties:
        clientId:
          type: string
          description: A unique, alpha-numeric ID which identifies the client to the
            vendor. Used to connect the order to the contract, billing, and contact
            info.
        numberOfSamples:
          type: integer
          description: The total number of samples contained in this request. Used
            for billing and basic validation of the request.
        plates:
          type: array
          description: Array of new plates to be submitted to a vendor
          items:
            $ref: '#/components/schemas/vendorOrderRequest_plates'
      description: Response of a plate submission
    vendorPlatesSubmissionRequest:
      type: object
      properties:
        clientId:
          type: string
          description: A unique, alpha-numeric ID which identifies the client to the
            vendor. Used to connect the order to the contract, billing, and contact
            info.
        numberOfSamples:
          type: integer
          description: The total number of samples contained in this request. Used
            for billing and basic validation of the request.
        plates:
          type: array
          description: Array of new plates to be submitted to a vendor
          items:
            $ref: '#/components/schemas/vendorOrderRequest_plates'
        sampleType:
          type: string
          description: The type of Samples being submitted
          enum:
          - DNA
          - RNA
          - Tissue
      description: Request object structure to submit plate data to a vendor
    vendorPlatesSubmissionResponse:
      type: object
      properties:
        submissionId:
          type: string
          description: A unique, alpha-numeric ID which identifies a set of plates
            which have been successfully submitted.
      description: Response to an order request
    vendorResultFile:
      required:
      - clientSampleIds
      - fileName
      - fileType
      - fileURL
      type: object
      properties:
        additionalInfo:
          type: object
          additionalProperties:
            type: string
          description: Additional arbitrary info
        clientSampleIds:
          type: array
          description: The list of sampleDbIds included in the file
          items:
            type: string
        fileName:
          type: string
          description: Name of the file
        fileType:
          type: string
          description: Format of the file
        fileURL:
          type: string
          description: The URL to a file with the results of a vendor analysis
        md5sum:
          type: string
          description: MD5 Hash Check Sum for the file to confirm download without
            error
    vendorSample:
      type: object
      properties:
        clientSampleBarCode:
          type: string
          description: (Optional) The value of the bar code attached to this sample
        clientSampleId:
          type: string
          description: The ID which uniquely identifies this sample to the client
            making the request
        column:
          type: string
          description: The Column identifier for this samples location in the plate
        comments:
          type: string
          description: Generic comments about this sample for the vendor
        concentration:
          $ref: '#/components/schemas/measurement'
        organismName:
          type: string
          description: Scientific organism name
        row:
          type: string
          description: The Row identifier for this samples location in the plate
        speciesName:
          type: string
          description: Scientific species name
        taxonomyOntologyReference:
          $ref: '#/components/schemas/vendorOntologyReference'
        tissueType:
          type: string
          description: The type of tissue in this sample. List of accepted tissue
            types can be found in the Vendor Specs.
        tissueTypeOntologyReference:
          $ref: '#/components/schemas/vendorOntologyReference'
        volume:
          $ref: '#/components/schemas/measurement'
        well:
          type: string
          description: The Well identifier for this samples location in the plate.
            Ussually a concatination of Row and Column.
    vendorSpecification:
      type: object
      properties:
        additionalInfo:
          type: object
          additionalProperties:
            type: object
          description: Additional arbitrary information specific to a particular Vendor.
            Look for the Vedors specific API documentation for more details
        services:
          type: array
          description: List of platform specifications available at the vendor
          items:
            $ref: '#/components/schemas/vendorSpecificationService'
        vendorContact:
          $ref: '#/components/schemas/vendorContact'
    vendorSpecificationService:
      type: object
      properties:
        serviceDescription:
          type: string
          description: Description of the vendor platform
        serviceId:
          type: string
          description: Unique identifier for this service
        serviceName:
          type: string
          description: The human readable name of a platform
        servicePlatformMarkerType:
          type: string
          description: The type of markers used in this services platform
          enum:
          - FIXED
          - DISCOVERABLE
        servicePlatformName:
          type: string
          description: The technology platform used by this service
        specificRequirements:
          type: object
          description: Additional arbitrary requirements for a particular platform
    alleleMatrixDetailsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/alleleMatrixDetails'
    alleleMatrixDetailsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/alleleMatrixDetailsResponse_result'
    alleleMatrixValuesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          allOf:
          - $ref: '#/components/schemas/metadata'
          - $ref: '#/components/schemas/asynchStatusMetadata'
        result:
          $ref: '#/components/schemas/alleleMatrixValues'
    alleleMatrixValuesResponse_1:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/alleleMatrixValues'
    germplasmAttributeDefsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/germplasmAttributeDef'
    germplasmAttributeDefsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasmAttributeDefsResponse_result'
    germplasmAttributeCategoriesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/germplasmAttributeCategory'
    germplasmAttributeCategoriesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasmAttributeCategoriesResponse_result'
    breedingMethodsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/breedingMethod'
    breedingMethodsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/breedingMethodsResponse_result'
    breedingMethodResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/breedingMethod'
    callsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: Array of availible calls on this server
          items:
            $ref: '#/components/schemas/call'
    callsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/callsResponse_result'
    commonCropNamesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: array of crop names availible on the server
          items:
            type: string
            description: supported crop name
    commonCropNamesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/commonCropNamesResponse_result'
    cropsResponse_result:
      type: object
      properties:
        data:
          type: array
          description: array of crop names availible on the server
          items:
            type: string
            description: supported crop name
    cropsResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/cropsResponse_result'
    germplasmResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/germplasm'
    germplasmResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasmResponse_result'
    germplasmResponse_1_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/germplasm'
    germplasmResponse_1:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasmResponse_1_result'
    germplasmResponse_2:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasm'
    germplasmAttributeListResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasmAttributeList'
    germplasmMarkerprofilesListResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasmMarkerprofilesList'
    germplasmMCPDResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasmMCPD'
    pedigreeResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/pedigree'
    progenyResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/progeny'
    imagesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: Array of image meta data
          items:
            $ref: '#/components/schemas/image'
    imagesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/imagesResponse_result'
    imageResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/image'
    listSummaryResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: Array of generic list summaries
          items:
            $ref: '#/components/schemas/listSummary'
    listSummaryResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/listSummaryResponse_result'
    listResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/listDetails'
    locationsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/location'
    locationsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/locationsResponse_result'
    locationResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/location'
    body:
      type: object
      properties:
        client_id:
          type: string
        grant_type:
          type: string
        password:
          type: string
        username:
          type: string
    genomeMapsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/genomeMap'
    genomeMapsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/genomeMapsResponse_result'
    mapDetailsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/genomeMapDetails'
    markerSummaryMapResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/markerSummaryMap'
    markerSummaryMapResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/markerSummaryMapResponse_result'
    markerSummaryLinkageGroupResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/markerSummaryLinkageGroup'
    markerSummaryLinkageGroupResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/markerSummaryLinkageGroupResponse_result'
    markerProfileDescriptionsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/markerProfileDescription'
    markerProfileDescriptionsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/markerProfileDescriptionsResponse_result'
    markerProfilesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/markerProfile'
    MethodsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/method'
    MethodsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/MethodsResponse_result'
    MethodResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/method'
    observationLevelsResponse_result:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
            description: observation levels available in this database
    observationLevelsResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationLevelsResponse_result'
    observationLevelsResponse_1_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            type: string
            description: observation levels available in this database
    observationLevelsResponse_1:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationLevelsResponse_1_result'
    observationUnitsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationUnitPhenotype'
    observationUnitsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationUnitsResponse_result'
    ontologiesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ontology'
    ontologiesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/ontologiesResponse_result'
    personsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: Array of people
          items:
            $ref: '#/components/schemas/person'
    personsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/personsResponse_result'
    personResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/person'
    newObservationDbIdsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/newObservationDbIds'
    observationUnitsResponse_1_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationUnitPhenotype'
    observationUnitsResponse_1:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationUnitsResponse_1_result'
    observationUnitsTableResponse_1:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationUnitsTableResponse'
    programsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/program'
    programsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/programsResponse_result'
    programsResponse_1_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/program'
    programsResponse_1:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/programsResponse_1_result'
    samplesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/sample'
    samplesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/samplesResponse_result'
    samplesResponse_1_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/sample'
    samplesResponse_1:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/samplesResponse_1_result'
    sampleResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/sample'
    ScalesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/scale'
    ScalesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/ScalesResponse_result'
    ScaleResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/scale'
    observationUnitsTableResponse_2:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationUnitsTableResponse'
    observationUnitsResponse_2_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationUnit'
    observationUnitsResponse_2:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationUnitsResponse_2_result'
    studiesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/studySummary'
    studiesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/studiesResponse_result'
    observationVariablesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationVariable'
    observationVariablesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationVariablesResponse_result'
    seasonsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/season'
    seasonsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/seasonsResponse_result'
    studiesResponse_1_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/studySummary'
    studiesResponse_1:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/studiesResponse_1_result'
    studyResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/study'
    germplasmSummaryListResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/germplasmSummaryList'
    observationUnitPositionsResponse_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationUnitPosition'
    observationUnitPositionsResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationUnitPositionsResponse_result'
    observationUnitPositionsResponse_1_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationUnitPosition'
    observationUnitPositionsResponse_1:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationUnitPositionsResponse_1_result'
    studyObservationVariablesResponse_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationVariable'
        studyDbId:
          type: string
        trialName:
          type: string
    studyObservationVariablesResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/studyObservationVariablesResponse_result'
    observationsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observation'
    observationsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationsResponse_result'
    newObservationUnitDbIdsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/newObservationUnitDbIds'
    newObservationsRequestWrapperDeprecated:
      title: newObservationsRequestWrapperDeprecated
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/newObservationsRequestDeprecated'
    studyObservationVariablesResponse_1_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationVariable'
        studyDbId:
          type: string
        trialName:
          type: string
    studyObservationVariablesResponse_1:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/studyObservationVariablesResponse_1_result'
    studyobservationsTableResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationsTable'
    studyTypesResponse_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/studyType'
    studyTypesResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/studyTypesResponse_result'
    studyTypesResponse_1_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/studyType'
    studyTypesResponse_1:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/studyTypesResponse_1_result'
    TraitsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/traitSummary'
    TraitsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/TraitsResponse_result'
    TraitResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/trait'
    TraitSummaryResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/traitSummary'
    trialsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/trialSummary'
    trialsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/trialsResponse_result'
    trialResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/trial'
    observationVariablesResponse_1_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/observationVariable'
    observationVariablesResponse_1:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationVariablesResponse_1_result'
    dataTypesResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/dataTypesResponseResult'
    observationVariableResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/observationVariable'
    vendorOrdersResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/vendorOrder'
    vendorOrdersResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/vendorOrdersResponse_result'
    vendorPlatesResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/vendorPlate'
    vendorPlatesResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/vendorPlatesResponse_result'
    vendorOrderResultsResponse_result:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/vendorResultFile'
    vendorOrderResultsResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/vendorOrderResultsResponse_result'
    vendorOrderStatusResponse_result:
      type: object
      properties:
        status:
          type: string
          enum:
          - registered
          - received
          - inProgress
          - completed
          - rejected
    vendorOrderStatusResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/vendorOrderStatusResponse_result'
    vendorPlateResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/vendorPlatesSubmissionResponse'
    vendorPlateGetResponse_1:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/vendorPlateGetResponse'
    vendorSpecificationResponse:
      required:
      - metadata
      - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/vendorSpecification'
    germplasm_donors:
      type: object
      properties:
        donorAccessionNumber:
          type: string
        donorInstituteCode:
          type: string
        germplasmPUI:
          type: string
    germplasmMCPD_breedingInstitutes:
      type: object
      properties:
        instituteCode:
          type: string
          description: MCPD (v2.1) (BREDCODE) 18. FAO WIEWS code of the institute
            that has bred the material. If the holding institute has bred the material,
            the breeding institute code (BREDCODE) should be the same as the holding
            institute code (INSTCODE). Follows INSTCODE standard. Multiple values
            are separated by a semicolon without space.
        instituteName:
          type: string
          description: MCPD (v2.1) (BREDNAME) 18.1  Name of the institute (or person)
            that bred the material. This descriptor should be used only if BREDCODE
            cannot be filled because the FAO WIEWS code for this institute is not
            available. Multiple names are separated by a semicolon without space.
    germplasmMCPD_collectingInfo_collectingInstitutes:
      type: object
      properties:
        instituteAddress:
          type: string
          description: MCPD (v2.1) (COLLINSTADDRESS) 4.1.1  Address of the institute
            collecting the sample. This descriptor should be used only if COLLCODE
            cannot be filled since the FAO WIEWS code for this institute is not available.
            Multiple values are separated by a semicolon without space.
        instituteCode:
          type: string
          description: MCPD (v2.1) (COLLCODE) 4.  FAO WIEWS code of the institute
            collecting the sample. If the holding institute has collected the material,
            the collecting institute code (COLLCODE) should be the same as the holding
            institute code (INSTCODE). Follows INSTCODE standard. Multiple values
            are separated by a semicolon without space.
        instituteName:
          type: string
          description: MCPD (v2.1) (COLLNAME) 4.1  Name of the institute collecting
            the sample. This descriptor should be used only if COLLCODE cannot be
            filled because the FAO WIEWS code for this institute is not available.
            Multiple values are separated by a semicolon without space.
    germplasmMCPD_collectingInfo_collectingSite:
      type: object
      properties:
        coordinateUncertainty:
          type: string
          description: MCPD (v2.1) (COORDUNCERT) 15.5 Uncertainty associated with
            the coordinates in metres. Leave the value empty if the uncertainty is
            unknown.
        elevation:
          type: string
          description: MCPD (v2.1) (ELEVATION) 16. Elevation of collecting site expressed
            in metres above sea level. Negative values are allowed.
        georeferencingMethod:
          type: string
          description: MCPD (v2.1) (GEOREFMETH) 15.7  The georeferencing method used
            (GPS, determined from map, gazetteer, or estimated using software). Leave
            the value empty if georeferencing method is not known.
        latitudeDecimal:
          type: string
          description: MCPD (v2.1) (DECLATITUDE) 15.1 Latitude expressed in decimal
            degrees. Positive values are North of the Equator; negative values are
            South of the Equator (e.g. -44.6975).
        latitudeDegrees:
          type: string
          description: MCPD (v2.1) (LATITUDE) 15.2 Degrees (2 digits) minutes (2 digits),
            and seconds (2 digits) followed by N (North) or S (South) (e.g. 103020S).
            Every missing digit (minutes or seconds) should be indicated with a hyphen.
            Leading zeros are required (e.g. 10
        locationDescription:
          type: string
          description: MCPD (v2.1) (COLLSITE) 14. Location information below the country
            level that describes where the accession was collected, preferable in
            English. This might include the distance in kilometres and direction from
            the nearest town, village or map grid reference point, (e.g. 7 km south
            of Curitiba in the state of Parana).
        longitudeDecimal:
          type: string
          description: MCPD (v2.1) (DECLONGITUDE) 15.3 Longitude expressed in decimal
            degrees. Positive values are East of the Greenwich Meridian; negative
            values are West of the Greenwich Meridian (e.g. +120.9123).
        longitudeDegrees:
          type: string
          description: MCPD (v2.1) (LONGITUDE) 15.4 Degrees (3 digits), minutes (2
            digits), and seconds (2 digits) followed by E (East) or W (West) (e.g.
            0762510W). Every missing digit (minutes or seconds) should be indicated
            with a hyphen. Leading zeros are required (e.g. 076
        spatialReferenceSystem:
          type: string
          description: MCPD (v2.1) (COORDDATUM) 15.6 The geodetic datum or spatial
            reference system upon which the coordinates given in decimal latitude
            and decimal longitude are based (e.g. WGS84, ETRS89, NAD83). The GPS uses
            the WGS84 datum.
      description: Information about the location where the sample was collected
    germplasmMCPD_collectingInfo:
      type: object
      properties:
        collectingDate:
          type: string
          description: MCPD (v2.1) (COLLDATE) 17. Collecting date of the sample [YYYYMMDD]
            where YYYY is the year, MM is the month and DD is the day. Missing data
            (MM or DD) should be indicated with hyphens or "00" [double zero].
        collectingInstitutes:
          type: array
          description: Institutes which collected the sample
          items:
            $ref: '#/components/schemas/germplasmMCPD_collectingInfo_collectingInstitutes'
        collectingMissionIdentifier:
          type: string
          description: MCPD (v2.1) (COLLMISSID) 4.2 Identifier of the collecting mission
            used by the Collecting Institute (4 or 4.1) (e.g. "CIATFOR052", "CN426").
        collectingNumber:
          type: string
          description: MCPD (v2.1) (COLLNUMB) 3. Original identifier assigned by the
            collector(s) of the sample, normally composed of the name or initials
            of the collector(s) followed by a number (e.g. "FM9909"). This identifier
            is essential for identifying duplicates held in different collections.
        collectingSite:
          $ref: '#/components/schemas/germplasmMCPD_collectingInfo_collectingSite'
      description: Information about the collection of this germplasm
    germplasmMCPD_donorInfo_donorInstitute:
      type: object
      properties:
        instituteCode:
          type: string
          description: MCPD (v2.1) (DONORCODE) 22. FAO WIEWS code of the donor institute.
            Follows INSTCODE standard.
        instituteName:
          type: string
          description: MCPD (v2.1) (DONORNAME) 22.1  Name of the donor institute (or
            person). This descriptor should be used only if DONORCODE cannot be filled
            because the FAO WIEWS code for this institute is not available.
    germplasmMCPD_donorInfo:
      type: object
      properties:
        donorAccessionNumber:
          type: string
          description: MCPD (v2.1) (DONORNUMB) 23. Identifier assigned to an accession
            by the donor. Follows ACCENUMB standard.
        donorInstitute:
          $ref: '#/components/schemas/germplasmMCPD_donorInfo_donorInstitute'
      description: Information about the donor
    germplasmMCPD_safetyDuplicateInstitues:
      type: object
      properties:
        instituteCode:
          type: string
          description: MCPD (v2.1) (DUPLSITE) 25. FAO WIEWS code of the institute(s)
            where a safety duplicate of the accession is maintained. Follows INSTCODE
            standard.
        instituteName:
          type: string
          description: MCPD (v2.1) (DUPLINSTNAME) 25.1  Name of the institute where
            a safety duplicate of the accession is maintained.
    markersResponse_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/marker'
    metadata_pagination:
      type: object
      properties:
        currentPage:
          type: integer
        pageSize:
          type: integer
        totalCount:
          type: integer
        totalPages:
          type: integer
      description: The pagination object is applicable only when the payload contains
        a "data" key. It describes the pagination of the data contained in the "data"
        array, as a way to identify which subset of data is being returned. Pages
        are zero indexed, so the first page will be page 0 (zero).
    newObservationDbIds_observations:
      type: object
      properties:
        observationDbId:
          type: string
        observationUnitDbId:
          type: string
        observationVariableDbId:
          type: string
    newObservationsRequest_observations:
      type: object
      properties:
        collector:
          type: string
        observationDbId:
          type: string
        observationTimeStamp:
          type: string
          format: date-time
        observationUnitDbId:
          type: string
        observationVariableDbId:
          type: string
        value:
          type: string
    newObservationsRequestDeprecated_data:
      type: object
      properties:
        observatioUnitDbId:
          type: string
        observations:
          type: array
          items:
            $ref: '#/components/schemas/newObservationsRequest_observations'
        studyDbId:
          type: number
    newObservationsTableRequest_result:
      type: object
      properties:
        data:
          type: array
          items:
            type: array
            items:
              type: string
      description: DEPRECATED
    newSampleDbId_result:
      type: object
      properties:
        sampleDbId:
          type: string
        sampleId:
          type: string
          description: '** Deprecated ** use sampleDbId'
      description: List of sample references which have been created or updated
    ontologyReference_documentationLinks:
      type: object
      properties:
        URL:
          type: string
          format: uri
        type:
          type: string
          enum:
          - OBO
          - RDF
          - WEBPAGE
    pedigree_siblings:
      type: object
      properties:
        defaultDisplayName:
          type: string
        germplasmDbId:
          type: string
    phenotypesRequest_data:
      required:
      - observatioUnitDbId
      - observations
      - studyDbId
      type: object
      properties:
        observatioUnitDbId:
          type: string
        observations:
          type: array
          items:
            $ref: '#/components/schemas/phenotypesRequestObservation'
        studyDbId:
          type: string
      description: new phenotypes
    progeny_progeny:
      type: object
      properties:
        defaultDisplayName:
          type: string
          description: The human readable name of a progeny germplasm
        germplasmDbId:
          type: string
          description: The unique identifier of a progeny germplasm
        parentType:
          type: string
          description: Given a germplasm A having a progeny B and C, 'parentType'
            for progeny B item refers to the 'parentType' of A toward B.
          enum:
          - MALE
          - FEMALE
          - SELF
          - POPULATION
    study_lastUpdate:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        version:
          type: string
      description: The date and time when this study was last modified
    studyLayoutRequest_layout:
      type: object
      properties:
        X:
          title: xCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateX"
          deprecated: true
        Y:
          title: yCoordinate
          type: string
          description: DEPRECATED - use "positionCoordinateY"
          deprecated: true
        blockNumber:
          type: integer
        entryType:
          type: string
          enum:
          - CHECK
          - TEST
          - FILLER
        observationUnitDbId:
          type: string
        positionCoordinateX:
          type: string
          description: The X position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateXType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        positionCoordinateY:
          type: string
          description: The Y position coordinate for an observation unit. Different
            systems may use different coordinate systems.
        positionCoordinateYType:
          type: string
          description: "The type of positional coordinate used. Must be one of the\
            \ following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum.\
            \ See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709\
            \ standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\"\
            \ for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl\
            \ - The physical counted number, could be independant or within a planted\
            \ row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL\
            \ - The column index number of a square grid overlay\nMEASURED_ROW - The\
            \ distance in meters from a defined 0th row\nMEASURED_COL - The distance\
            \ in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
        replicate:
          type: integer
    successfulSearchResponse_result:
      type: object
      properties:
        searchResultDbId:
          type: string
    trial_datasetAuthorship:
      type: object
      properties:
        datasetPUI:
          type: string
        license:
          type: string
      description: DEPRECATED in v1.3 - see datasetAuthorships
    trial_datasetAuthorships:
      type: object
      properties:
        datasetPUI:
          type: string
        license:
          type: string
    trial_publications:
      type: object
      properties:
        publicationPUI:
          type: string
        publicationReference:
          type: string
    trial_studies:
      type: object
      properties:
        locationDbId:
          type: string
        locationName:
          type: string
        studyDbId:
          type: string
        studyName:
          type: string
    vendorOrderRequest_plates:
      type: object
      properties:
        clientPlateBarcode:
          type: string
          description: (Optional) The value of the bar code attached to this plate
        clientPlateId:
          type: string
          description: The ID which uniquely identifies this plate to the client making
            the request
        sampleSubmissionFormat:
          $ref: '#/components/schemas/plateFormat'
        samples:
          type: array
          items:
            $ref: '#/components/schemas/vendorSample'
    vendorOrderResponse_result_shipmentForms:
      type: object
      properties:
        fileDescription:
          type: string
          description: The human readable long description for this form
        fileName:
          type: string
          description: The human readable name for this form
        fileURL:
          type: string
          description: The URL to download this form
    vendorOrderResponse_result:
      type: object
      properties:
        orderId:
          type: string
          description: A unique, alpha-numeric ID which identifies the order .
        shipmentForms:
          type: array
          description: Array of paper forms which need to be printed and included
            with the physical shipment
          items:
            $ref: '#/components/schemas/vendorOrderResponse_result_shipmentForms'
      description: Response to an order request
  responses:
    400BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: string
          example: |-
            ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
            ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
            ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
    401Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: string
          example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
            token
    403Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: string
          example: ERROR - 2018-10-08T20:15:11Z - User does not have permission to
            perform this action
    404NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: string
          example: ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not
            found
    successfulSearchResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/successfulSearchResponse'
          example:
            metadata:
              datafiles: []
              pagination:
                currentPage: 0
                pageSize: 0
                totalCount: 0
                totalPages: 0
              status: []
            result:
              searchResultDbId: 551ae08c-4548-4bde-ad70-f23beb25e2ea
  parameters:
    acceptHeader:
      name: Accept
      in: header
      description: The requested content type which should be returned by the server
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/WSMIMEDataTypes'
      example: application/json
    authorizationHeader:
      name: Authorization
      in: header
      description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
        \ {token_string} </strong>"
      required: false
      style: simple
      explode: false
      schema:
        pattern: ^Bearer .*$
        type: string
      example: Bearer XXXX
    page:
      name: page
      in: query
      description: Which result page is requested. The page indexing starts at 0 (the
        first page is 'page'= 0). Default is `0`.
      required: false
      style: form
      explode: true
      schema:
        type: integer
      example: "0"
    pageSize:
      name: pageSize
      in: query
      description: The size of the pages to be returned. Default is `1000`.
      required: false
      style: form
      explode: true
      schema:
        type: integer
      example: 1000
    searchResultsDbId:
      name: searchResultsDbId
      in: path
      description: Permanent unique identifier which references the search results
      required: true
      style: simple
      explode: false
      schema:
        type: string
#  securitySchemes:
#    AuthorizationToken:
#      type: http
#      description: OAuth Bearer Token - A valid Bearer token to prove authorization
#      scheme: bearer
#      bearerFormat: nonce token or JWT
